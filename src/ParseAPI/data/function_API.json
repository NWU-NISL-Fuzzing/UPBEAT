{"Microsoft.Quantum.AmplitudeAmplification": {"AmplitudeAmplificationFromPartialReflections": {"callableType": "function", "argName": ["phases", "startStateReflection", "targetStateReflection"], "argType": ["ReflectionPhases", "ReflectionOracle", "ReflectionOracle"], "returnType": "Qubit[] => Unit  is Adj + Ctl"}, "AmplitudeAmplificationFromStatePreparation": {"callableType": "function", "argName": ["phases", "stateOracle", "idxFlagQubit"], "argType": ["ReflectionPhases", "StateOracle", "Int"], "returnType": "Qubit[] => Unit  is Adj + Ctl"}, "FixedPointReflectionPhases": {"callableType": "function", "argName": ["nQueries", "successMin"], "argType": ["Int", "Double"], "returnType": "ReflectionPhases"}, "ObliviousAmplitudeAmplificationFromPartialReflections": {"callableType": "function", "argName": ["phases", "startStateReflection", "targetStateReflection", "signalOracle"], "argType": ["ReflectionPhases", "ReflectionOracle", "ReflectionOracle", "ObliviousOracle"], "returnType": "(Qubit[],Qubit[]) => Unit  is Adj + Ctl"}, "ObliviousAmplitudeAmplificationFromStatePreparation": {"callableType": "function", "argName": ["phases", "startStateOracle", "signalOracle", "idxFlagQubit"], "argType": ["ReflectionPhases", "DeterministicStateOracle", "ObliviousOracle", "Int"], "returnType": "(Qubit[],Qubit[]) => Unit  is Adj + Ctl"}, "ReflectionStart": {"callableType": "function", "argName": [], "argType": [], "returnType": "ReflectionOracle"}, "RotationPhasesAsReflectionPhases": {"callableType": "function", "argName": ["rotPhases"], "argType": ["RotationPhases"], "returnType": "ReflectionPhases"}, "StandardAmplitudeAmplification": {"callableType": "function", "argName": ["nIterations", "stateOracle", "idxFlagQubit"], "argType": ["Int", "StateOracle", "Int"], "returnType": "Qubit[] => Unit  is Adj + Ctl"}, "StandardReflectionPhases": {"callableType": "function", "argName": ["nIterations"], "argType": ["Int"], "returnType": "ReflectionPhases"}, "TargetStateReflectionOracle": {"callableType": "function", "argName": ["idxFlagQubit"], "argType": ["Int"], "returnType": "ReflectionOracle"}}, "Microsoft.Quantum.Arithmetic": {"BigEndianAsLittleEndian": {"callableType": "function", "argName": ["input"], "argType": ["BigEndian"], "returnType": "LittleEndian"}, "IdenticalFormatFactFxP": {"callableType": "function", "argName": ["fixedPoints"], "argType": ["FixedPoint[]"], "returnType": "Unit"}, "IdenticalPointPosFactFxP": {"callableType": "function", "argName": ["fixedPoints"], "argType": ["FixedPoint[]"], "returnType": "Unit"}, "LittleEndianAsBigEndian": {"callableType": "function", "argName": ["input"], "argType": ["LittleEndian"], "returnType": "BigEndian"}, "ReversedOpBE": {"callableType": "function", "argName": ["op"], "argType": ["BigEndian => Unit"], "returnType": "LittleEndian => Unit"}, "ReversedOpBEA": {"callableType": "function", "argName": ["op"], "argType": ["BigEndian => Unit  is Adj"], "returnType": "LittleEndian => Unit  is Adj"}, "ReversedOpBEC": {"callableType": "function", "argName": ["op"], "argType": ["BigEndian => Unit  is Ctl"], "returnType": "LittleEndian => Unit  is Ctl"}, "ReversedOpBECA": {"callableType": "function", "argName": ["op"], "argType": ["BigEndian => Unit  is Adj + Ctl"], "returnType": "LittleEndian => Unit  is Adj + Ctl"}, "ReversedOpLE": {"callableType": "function", "argName": ["op"], "argType": ["LittleEndian => Unit"], "returnType": "BigEndian => Unit"}, "ReversedOpLEA": {"callableType": "function", "argName": ["op"], "argType": ["LittleEndian => Unit  is Adj"], "returnType": "BigEndian => Unit  is Adj"}, "ReversedOpLEC": {"callableType": "function", "argName": ["op"], "argType": ["LittleEndian => Unit  is Ctl"], "returnType": "BigEndian => Unit  is Ctl"}, "ReversedOpLECA": {"callableType": "function", "argName": ["op"], "argType": ["LittleEndian => Unit  is Adj + Ctl"], "returnType": "BigEndian => Unit  is Adj + Ctl"}}, "Microsoft.Quantum.Arrays": {"All": {"callableType": "function", "argName": ["predicate", "array"], "argType": ["'T -> Bool", "'T[]"], "returnType": "Bool"}, "Any": {"callableType": "function", "argName": ["predicate", "array"], "argType": ["'T -> Bool", "'T[]"], "returnType": "Bool"}, "Chunks": {"callableType": "function", "argName": ["nElements", "arr"], "argType": ["Int", "'T[]"], "returnType": "'T[][]"}, "ColumnAt": {"callableType": "function", "argName": ["column", "matrix"], "argType": ["Int", "'T[][]"], "returnType": "'T[]"}, "ConstantArray": {"callableType": "function", "argName": ["length", "value"], "argType": ["Int", "'T"], "returnType": "'T[]"}, "Count": {"callableType": "function", "argName": ["predicate", "array"], "argType": ["'T -> Bool", "'T[]"], "returnType": "Int"}, "CumulativeFolded": {"callableType": "function", "argName": ["fn", "state", "array"], "argType": ["('State,'T) -> 'State", "'State", "'T[]"], "returnType": "'State[]"}, "Diagonal": {"callableType": "function", "argName": ["matrix"], "argType": ["'T[][]"], "returnType": "'T[]"}, "ElementAt": {"callableType": "function", "argName": ["index", "array"], "argType": ["Int", "'T[]"], "returnType": "'T"}, "ElementsAt": {"callableType": "function", "argName": ["range", "array"], "argType": ["Range", "'T[]"], "returnType": "'T[]"}, "EmptyArray": {"callableType": "function", "argName": [], "argType": [], "returnType": "'TElement[]"}, "Enumerated": {"callableType": "function", "argName": ["array"], "argType": ["'TElement[]"], "returnType": "(Int,'TElement)[]"}, "EqualA": {"callableType": "function", "argName": ["equal", "array1", "array2"], "argType": ["('T,'T) -> Bool", "'T[]", "'T[]"], "returnType": "Bool"}, "Exclude": {"callableType": "function", "argName": ["remove", "array"], "argType": ["Int[]", "'T[]"], "returnType": "'T[]"}, "Excluding": {"callableType": "function", "argName": ["remove", "array"], "argType": ["Int[]", "'T[]"], "returnType": "'T[]"}, "Filtered": {"callableType": "function", "argName": ["predicate", "array"], "argType": ["'T -> Bool", "'T[]"], "returnType": "'T[]"}, "FlatMapped": {"callableType": "function", "argName": ["mapper", "array"], "argType": ["'TInput -> 'TOutput[]", "'TInput[]"], "returnType": "'TOutput[]"}, "Flattened": {"callableType": "function", "argName": ["arrays"], "argType": ["'T[][]"], "returnType": "'T[]"}, "Fold": {"callableType": "function", "argName": ["folder", "state", "array"], "argType": ["('State,'T) -> 'State", "'State", "'T[]"], "returnType": "'State"}, "Head": {"callableType": "function", "argName": ["array"], "argType": ["'A[]"], "returnType": "'A"}, "HeadAndRest": {"callableType": "function", "argName": ["array"], "argType": ["'A[]"], "returnType": "('A,'A[])"}, "IndexOf": {"callableType": "function", "argName": ["predicate", "arr"], "argType": ["'T -> Bool", "'T[]"], "returnType": "Int"}, "IndexRange": {"callableType": "function", "argName": ["array"], "argType": ["'TElement[]"], "returnType": "Range"}, "Interleaved": {"callableType": "function", "argName": ["first", "second"], "argType": ["'T[]", "'T[]"], "returnType": "'T[]"}, "IsEmpty": {"callableType": "function", "argName": ["array"], "argType": ["'T[]"], "returnType": "Bool"}, "IsPermutation": {"callableType": "function", "argName": ["permutation"], "argType": ["Int[]"], "returnType": "Bool"}, "IsSorted": {"callableType": "function", "argName": ["comparison", "array"], "argType": ["('T,'T) -> Bool", "'T[]"], "returnType": "Bool"}, "LookupFunction": {"callableType": "function", "argName": ["array"], "argType": ["'T[]"], "returnType": "Int -> 'T"}, "Mapped": {"callableType": "function", "argName": ["mapper", "array"], "argType": ["'T -> 'U", "'T[]"], "returnType": "'U[]"}, "MappedByIndex": {"callableType": "function", "argName": ["mapper", "array"], "argType": ["(Int,'T) -> 'U", "'T[]"], "returnType": "'U[]"}, "MappedOverRange": {"callableType": "function", "argName": ["mapper", "range"], "argType": ["Int -> 'T", "Range"], "returnType": "'T[]"}, "Most": {"callableType": "function", "argName": ["array"], "argType": ["'T[]"], "returnType": "'T[]"}, "MostAndTail": {"callableType": "function", "argName": ["array"], "argType": ["'A[]"], "returnType": "('A[],'A)"}, "Padded": {"callableType": "function", "argName": ["nElementsTotal", "defaultElement", "inputArray"], "argType": ["Int", "'T", "'T[]"], "returnType": "'T[]"}, "Partitioned": {"callableType": "function", "argName": ["nElements", "arr"], "argType": ["Int[]", "'T[]"], "returnType": "'T[][]"}, "Prefixes": {"callableType": "function", "argName": ["array"], "argType": ["'T[]"], "returnType": "'T[][]"}, "RectangularArrayFact": {"callableType": "function", "argName": ["array", "message"], "argType": ["'T[][]", "String"], "returnType": "Unit"}, "Rest": {"callableType": "function", "argName": ["array"], "argType": ["'T[]"], "returnType": "'T[]"}, "Reversed": {"callableType": "function", "argName": ["array"], "argType": ["'T[]"], "returnType": "'T[]"}, "SequenceI": {"callableType": "function", "argName": ["from", "to"], "argType": ["Int", "Int"], "returnType": "Int[]"}, "SequenceL": {"callableType": "function", "argName": ["from", "to"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt[]"}, "Sorted": {"callableType": "function", "argName": ["comparison", "array"], "argType": ["('T,'T) -> Bool", "'T[]"], "returnType": "'T[]"}, "SquareArrayFact": {"callableType": "function", "argName": ["array", "message"], "argType": ["'T[][]", "String"], "returnType": "Unit"}, "Subarray": {"callableType": "function", "argName": ["indices", "array"], "argType": ["Int[]", "'T[]"], "returnType": "'T[]"}, "Swapped": {"callableType": "function", "argName": ["firstIndex", "secondIndex", "arr"], "argType": ["Int", "Int", "'T[]"], "returnType": "'T[]"}, "Tail": {"callableType": "function", "argName": ["array"], "argType": ["'A[]"], "returnType": "'A"}, "Transposed": {"callableType": "function", "argName": ["matrix"], "argType": ["'T[][]"], "returnType": "'T[][]"}, "TupleArrayAsNestedArray": {"callableType": "function", "argName": ["tupleList"], "argType": ["('T,'T)[]"], "returnType": "'T[][]"}, "Unique": {"callableType": "function", "argName": ["equal", "array"], "argType": ["('T,'T) -> Bool", "'T[]"], "returnType": "'T[]"}, "Unzipped": {"callableType": "function", "argName": ["arr"], "argType": ["('T,'U)[]"], "returnType": "('T[],'U[])"}, "Where": {"callableType": "function", "argName": ["predicate", "array"], "argType": ["'T -> Bool", "'T[]"], "returnType": "Int[]"}, "Windows": {"callableType": "function", "argName": ["size", "array"], "argType": ["Int", "'T[]"], "returnType": "'T[][]"}, "Zipped": {"callableType": "function", "argName": ["left", "right"], "argType": ["'T[]", "'U[]"], "returnType": "('T,'U)[]"}, "Zipped3": {"callableType": "function", "argName": ["first", "second", "third"], "argType": ["'T1[]", "'T2[]", "'T3[]"], "returnType": "('T1,'T2,'T3)[]"}, "Zipped4": {"callableType": "function", "argName": ["first", "second", "third", "fourth"], "argType": ["'T1[]", "'T2[]", "'T3[]", "'T4[]"], "returnType": "('T1,'T2,'T3,'T4)[]"}, "_SwapOrderToPermuteArray": {"callableType": "function", "argName": ["newOrder"], "argType": ["Int[]"], "returnType": "(Int,Int)[]"}}, "Microsoft.Quantum.Bitwise": {"And": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "LeftShiftedI": {"callableType": "function", "argName": ["value", "amount"], "argType": ["Int", "Int"], "returnType": "Int"}, "LeftShiftedL": {"callableType": "function", "argName": ["value", "amount"], "argType": ["BigInt", "Int"], "returnType": "BigInt"}, "Not": {"callableType": "function", "argName": ["a"], "argType": ["Int"], "returnType": "Int"}, "Or": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "Parity": {"callableType": "function", "argName": ["a"], "argType": ["Int"], "returnType": "Int"}, "RightShiftedI": {"callableType": "function", "argName": ["value", "amount"], "argType": ["Int", "Int"], "returnType": "Int"}, "RightShiftedL": {"callableType": "function", "argName": ["value", "amount"], "argType": ["BigInt", "Int"], "returnType": "BigInt"}, "XBits": {"callableType": "function", "argName": ["paulis"], "argType": ["Pauli[]"], "returnType": "Int"}, "Xor": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "ZBits": {"callableType": "function", "argName": ["paulis"], "argType": ["Pauli[]"], "returnType": "Int"}}, "Microsoft.Quantum.Canon": {"Bound": {"callableType": "function", "argName": ["operations"], "argType": ["'T => Unit []"], "returnType": "'T => Unit"}, "BoundA": {"callableType": "function", "argName": ["operations"], "argType": ["'T => Unit  is Adj[]"], "returnType": "'T => Unit  is Adj"}, "BoundC": {"callableType": "function", "argName": ["operations"], "argType": ["'T => Unit  is Ctl[]"], "returnType": "'T => Unit  is Ctl"}, "BoundCA": {"callableType": "function", "argName": ["operations"], "argType": ["'T => Unit  is Adj + Ctl[]"], "returnType": "'T => Unit  is Adj + Ctl"}, "CControlled": {"callableType": "function", "argName": ["op"], "argType": ["'T => Unit"], "returnType": "(Bool,'T) => Unit"}, "CControlledA": {"callableType": "function", "argName": ["op"], "argType": ["'T => Unit  is Adj"], "returnType": "(Bool,'T) => Unit  is Adj"}, "CControlledC": {"callableType": "function", "argName": ["op"], "argType": ["'T => Unit  is Ctl"], "returnType": "(Bool,'T) => Unit  is Ctl"}, "CControlledCA": {"callableType": "function", "argName": ["op"], "argType": ["'T => Unit  is Adj + Ctl"], "returnType": "(Bool,'T) => Unit  is Adj + Ctl"}, "Compose": {"callableType": "function", "argName": ["outer", "inner"], "argType": ["'U -> 'V", "'T -> 'U"], "returnType": "'T -> 'V"}, "ConjugatedBy": {"callableType": "function", "argName": ["outerOperation", "innerOperation"], "argType": ["'T => Unit  is Adj", "'T => Unit"], "returnType": "'T => Unit"}, "ConjugatedByA": {"callableType": "function", "argName": ["outerOperation", "innerOperation"], "argType": ["'T => Unit  is Adj", "'T => Unit  is Adj"], "returnType": "'T => Unit  is Adj"}, "ConjugatedByC": {"callableType": "function", "argName": ["outerOperation", "innerOperation"], "argType": ["'T => Unit  is Adj", "'T => Unit  is Ctl"], "returnType": "'T => Unit  is Ctl"}, "ConjugatedByCA": {"callableType": "function", "argName": ["outerOperation", "innerOperation"], "argType": ["'T => Unit  is Adj", "'T => Unit  is Adj + Ctl"], "returnType": "'T => Unit  is Adj + Ctl"}, "ControlledOnBitString": {"callableType": "function", "argName": ["bits", "oracle"], "argType": ["Bool[]", "'T => Unit  is Adj + Ctl"], "returnType": "(Qubit[],'T) => Unit  is Adj + Ctl"}, "ControlledOnInt": {"callableType": "function", "argName": ["numberState", "oracle"], "argType": ["Int", "'T => Unit  is Adj + Ctl"], "returnType": "(Qubit[],'T) => Unit  is Adj + Ctl"}, "CurriedOp": {"callableType": "function", "argName": ["op"], "argType": ["('T,'U) => Unit"], "returnType": "'T -> 'U => Unit"}, "CurriedOpA": {"callableType": "function", "argName": ["op"], "argType": ["('T,'U) => Unit  is Adj"], "returnType": "'T -> 'U => Unit  is Adj"}, "CurriedOpC": {"callableType": "function", "argName": ["op"], "argType": ["('T,'U) => Unit  is Ctl"], "returnType": "'T -> 'U => Unit  is Ctl"}, "CurriedOpCA": {"callableType": "function", "argName": ["op"], "argType": ["('T,'U) => Unit  is Adj + Ctl"], "returnType": "'T -> 'U => Unit  is Adj + Ctl"}, "DecomposedIntoTimeStepsCA": {"callableType": "function", "argName": ["nSteps", "op", "trotterOrder"], "argType": ["Int", "(Int,Double,'T) => Unit  is Adj + Ctl", "Int"], "returnType": "(Double,'T) => Unit  is Adj + Ctl"}, "Delayed": {"callableType": "function", "argName": ["op", "arg"], "argType": ["'T => 'U", "'T"], "returnType": "Unit => 'U"}, "DelayedA": {"callableType": "function", "argName": ["op", "arg"], "argType": ["'T => Unit  is Adj", "'T"], "returnType": "Unit => Unit  is Adj"}, "DelayedC": {"callableType": "function", "argName": ["op", "arg"], "argType": ["'T => Unit  is Ctl", "'T"], "returnType": "Unit => Unit  is Ctl"}, "DelayedCA": {"callableType": "function", "argName": ["op", "arg"], "argType": ["'T => Unit  is Adj + Ctl", "'T"], "returnType": "Unit => Unit  is Adj + Ctl"}, "EmbedPauli": {"callableType": "function", "argName": ["pauli", "location", "n"], "argType": ["Pauli", "Int", "Int"], "returnType": "Pauli[]"}, "Fst": {"callableType": "function", "argName": ["pair"], "argType": ["('T,'U)"], "returnType": "'T"}, "Ignore": {"callableType": "function", "argName": ["value"], "argType": ["'T"], "returnType": "Unit"}, "IsRangeEmpty": {"callableType": "function", "argName": ["rng"], "argType": ["Range"], "returnType": "Bool"}, "IsResultOne": {"callableType": "function", "argName": ["input"], "argType": ["Result"], "returnType": "Bool"}, "IsResultZero": {"callableType": "function", "argName": ["input"], "argType": ["Result"], "returnType": "Bool"}, "MultiplexerBruteForceFromGenerator": {"callableType": "function", "argName": ["unitaryGenerator"], "argType": ["(Int,Int -> Qubit[] => Unit  is Adj + Ctl)"], "returnType": "(LittleEndian,Qubit[]) => Unit  is Adj + Ctl"}, "MultiplexerFromGenerator": {"callableType": "function", "argName": ["unitaryGenerator"], "argType": ["(Int,Int -> Qubit[] => Unit  is Adj + Ctl)"], "returnType": "(LittleEndian,Qubit[]) => Unit  is Adj + Ctl"}, "OperationPow": {"callableType": "function", "argName": ["op", "power"], "argType": ["'T => Unit", "Int"], "returnType": "'T => Unit"}, "OperationPowA": {"callableType": "function", "argName": ["op", "power"], "argType": ["'T => Unit  is Adj", "Int"], "returnType": "'T => Unit  is Adj"}, "OperationPowC": {"callableType": "function", "argName": ["op", "power"], "argType": ["'T => Unit  is Ctl", "Int"], "returnType": "'T => Unit  is Ctl"}, "OperationPowCA": {"callableType": "function", "argName": ["op", "power"], "argType": ["'T => Unit  is Adj + Ctl", "Int"], "returnType": "'T => Unit  is Adj + Ctl"}, "RestrictedToSubregister": {"callableType": "function", "argName": ["op", "idxs"], "argType": ["Qubit[] => Unit", "Int[]"], "returnType": "Qubit[] => Unit"}, "RestrictedToSubregisterA": {"callableType": "function", "argName": ["op", "idxs"], "argType": ["Qubit[] => Unit  is Adj", "Int[]"], "returnType": "Qubit[] => Unit  is Adj"}, "RestrictedToSubregisterC": {"callableType": "function", "argName": ["op", "idxs"], "argType": ["Qubit[] => Unit  is Ctl", "Int[]"], "returnType": "Qubit[] => Unit  is Ctl"}, "RestrictedToSubregisterCA": {"callableType": "function", "argName": ["op", "idxs"], "argType": ["Qubit[] => Unit  is Adj + Ctl", "Int[]"], "returnType": "Qubit[] => Unit  is Adj + Ctl"}, "SinglyControlled": {"callableType": "function", "argName": ["op"], "argType": ["'T => Unit  is Ctl"], "returnType": "(Qubit,'T) => Unit  is Ctl"}, "SinglyControlledA": {"callableType": "function", "argName": ["op"], "argType": ["'T => Unit  is Adj + Ctl"], "returnType": "(Qubit,'T) => Unit  is Adj + Ctl"}, "Snd": {"callableType": "function", "argName": ["pair"], "argType": ["('T,'U)"], "returnType": "'U"}, "TransformedOperation": {"callableType": "function", "argName": ["fn", "op"], "argType": ["'U -> 'T", "'T => Unit"], "returnType": "'U => Unit"}, "TransformedOperationA": {"callableType": "function", "argName": ["fn", "op"], "argType": ["'U -> 'T", "'T => Unit  is Adj"], "returnType": "'U => Unit  is Adj"}, "TransformedOperationC": {"callableType": "function", "argName": ["fn", "op"], "argType": ["'U -> 'T", "'T => Unit  is Ctl"], "returnType": "'U => Unit  is Ctl"}, "TransformedOperationCA": {"callableType": "function", "argName": ["fn", "op"], "argType": ["'U -> 'T", "'T => Unit  is Adj + Ctl"], "returnType": "'U => Unit  is Adj + Ctl"}, "UncurriedOp": {"callableType": "function", "argName": ["curriedOp"], "argType": ["'T -> 'U => Unit"], "returnType": "('T,'U) => Unit"}, "UncurriedOpA": {"callableType": "function", "argName": ["curriedOp"], "argType": ["'T -> 'U => Unit  is Adj"], "returnType": "('T,'U) => Unit  is Adj"}, "UncurriedOpC": {"callableType": "function", "argName": ["curriedOp"], "argType": ["'T -> 'U => Unit  is Ctl"], "returnType": "('T,'U) => Unit  is Ctl"}, "UncurriedOpCA": {"callableType": "function", "argName": ["curriedOp"], "argType": ["'T -> 'U => Unit  is Adj + Ctl"], "returnType": "('T,'U) => Unit  is Adj + Ctl"}, "WeightOnePaulis": {"callableType": "function", "argName": ["nQubits"], "argType": ["Int"], "returnType": "Pauli[][]"}}, "Microsoft.Quantum.Characterization": {}, "Microsoft.Quantum.Chemistry": {"HTermToGenIdx": {"callableType": "function", "argName": ["term", "termType"], "argType": ["HTerm", "Int[]"], "returnType": "GeneratorIndex"}, "HTermsToGenIdx": {"callableType": "function", "argName": ["data", "termType", "idx"], "argType": ["HTerm[]", "Int[]", "Int"], "returnType": "GeneratorIndex"}, "HTermsToGenSys": {"callableType": "function", "argName": ["data", "termType"], "argType": ["HTerm[]", "Int[]"], "returnType": "GeneratorSystem"}, "IsNotZero": {"callableType": "function", "argName": ["number"], "argType": ["Double"], "returnType": "Bool"}}, "Microsoft.Quantum.Chemistry.JordanWigner": {"JordanWignerBlockEncodingGeneratorSystem": {"callableType": "function", "argName": ["data"], "argType": ["JWOptimizedHTerms"], "returnType": "GeneratorSystem"}, "JordanWignerClusterOperatorEvolutionSet": {"callableType": "function", "argName": [], "argType": [], "returnType": "EvolutionSet"}, "JordanWignerClusterOperatorGeneratorSystem": {"callableType": "function", "argName": ["data"], "argType": ["JordanWignerInputState[]"], "returnType": "GeneratorSystem"}, "JordanWignerFermionEvolutionSet": {"callableType": "function", "argName": [], "argType": [], "returnType": "EvolutionSet"}, "JordanWignerFermionFunction": {"callableType": "function", "argName": ["generatorIndex"], "argType": ["GeneratorIndex"], "returnType": "EvolutionUnitary"}, "JordanWignerGeneratorSystem": {"callableType": "function", "argName": ["data"], "argType": ["JWOptimizedHTerms"], "returnType": "GeneratorSystem"}, "OptimizedBlockEncodingGeneratorSystem": {"callableType": "function", "argName": ["data"], "argType": ["JWOptimizedHTerms"], "returnType": "OptimizedBEGeneratorSystem"}, "OptimizedQubitizationOracle": {"callableType": "function", "argName": ["qSharpData", "targetError"], "argType": ["JordanWignerEncodingData", "Double"], "returnType": "(Int,(Double,Qubit[] => Unit  is Adj + Ctl))"}, "QubitizationOracle": {"callableType": "function", "argName": ["qSharpData"], "argType": ["JordanWignerEncodingData"], "returnType": "(Int,(Double,Qubit[] => Unit  is Adj + Ctl))"}, "TrotterStepOracle": {"callableType": "function", "argName": ["qSharpData", "trotterStepSize", "trotterOrder"], "argType": ["JordanWignerEncodingData", "Double", "Int"], "returnType": "(Int,(Double,Qubit[] => Unit  is Adj + Ctl))"}, "_ComputeJordanWignerBitString": {"callableType": "function", "argName": ["nFermions", "idxFermions"], "argType": ["Int", "Int[]"], "returnType": "Bool[]"}, "_ComputeJordanWignerPauliString": {"callableType": "function", "argName": ["nFermions", "idxFermions", "pauliReplacements"], "argType": ["Int", "Int[]", "Pauli[]"], "returnType": "Pauli[]"}, "_ComputeJordanWignerPauliZString": {"callableType": "function", "argName": ["nFermions", "idxFermions"], "argType": ["Int", "Int[]"], "returnType": "Pauli[]"}, "_JordanWignerClusterOperatorPQRSTermSigns": {"callableType": "function", "argName": ["indices"], "argType": ["Int[]"], "returnType": "(Int[],Double[],Double)"}, "_JordanWignerOptimizedBlockEncoding_": {"callableType": "function", "argName": ["targetError", "data", "nSpinOrbitals"], "argType": ["Double", "JWOptimizedHTerms", "Int"], "returnType": "((Int,Int),(Double,BlockEncodingReflection))"}, "_V0123TermToPauliMajIdx_": {"callableType": "function", "argName": ["term"], "argType": ["GeneratorIndex"], "returnType": "OptimizedBETermIndex[]"}}, "Microsoft.Quantum.Chemistry.JordanWigner.VQE": {"ExpandedCoefficients": {"callableType": "function", "argName": ["coeff", "termType"], "argType": ["Double[]", "Int"], "returnType": "Double[]"}, "MeasurementOperators": {"callableType": "function", "argName": ["nQubits", "indices", "termType"], "argType": ["Int", "Int[]", "Int"], "returnType": "Pauli[][]"}}, "Microsoft.Quantum.ClassicalControl": {}, "Microsoft.Quantum.Convert": {"BigIntAsBoolArray": {"callableType": "function", "argName": ["a"], "argType": ["BigInt"], "returnType": "Bool[]"}, "BigIntAsString": {"callableType": "function", "argName": ["a"], "argType": ["BigInt"], "returnType": "String"}, "BoolArrayAsBigInt": {"callableType": "function", "argName": ["a"], "argType": ["Bool[]"], "returnType": "BigInt"}, "BoolArrayAsFixedPoint": {"callableType": "function", "argName": ["integerBits", "bits"], "argType": ["Int", "Bool[]"], "returnType": "Double"}, "BoolArrayAsInt": {"callableType": "function", "argName": ["bits"], "argType": ["Bool[]"], "returnType": "Int"}, "BoolArrayAsPauli": {"callableType": "function", "argName": ["pauli", "bitApply", "bits"], "argType": ["Pauli", "Bool", "Bool[]"], "returnType": "Pauli[]"}, "BoolArrayAsResultArray": {"callableType": "function", "argName": ["input"], "argType": ["Bool[]"], "returnType": "Result[]"}, "BoolAsResult": {"callableType": "function", "argName": ["input"], "argType": ["Bool"], "returnType": "Result"}, "BoolAsString": {"callableType": "function", "argName": ["a"], "argType": ["Bool"], "returnType": "String"}, "DoubleAsFixedPoint": {"callableType": "function", "argName": ["integerBits", "fractionalBits", "value"], "argType": ["Int", "Int", "Double"], "returnType": "Double"}, "DoubleAsInt": {"callableType": "function", "argName": ["a"], "argType": ["Double"], "returnType": "Int"}, "DoubleAsString": {"callableType": "function", "argName": ["a"], "argType": ["Double"], "returnType": "String"}, "DoubleAsStringWithFormat": {"callableType": "function", "argName": ["a", "fmt"], "argType": ["Double", "String"], "returnType": "String"}, "FixedPointAsBoolArray": {"callableType": "function", "argName": ["integerBits", "fractionalBits", "value"], "argType": ["Int", "Int", "Double"], "returnType": "Bool[]"}, "FunctionAsOperation": {"callableType": "function", "argName": ["fn"], "argType": ["'Input -> 'Output"], "returnType": "'Input => 'Output"}, "IntAsBigInt": {"callableType": "function", "argName": ["a"], "argType": ["Int"], "returnType": "BigInt"}, "IntAsBoolArray": {"callableType": "function", "argName": ["number", "bits"], "argType": ["Int", "Int"], "returnType": "Bool[]"}, "IntAsDouble": {"callableType": "function", "argName": ["a"], "argType": ["Int"], "returnType": "Double"}, "IntAsString": {"callableType": "function", "argName": ["a"], "argType": ["Int"], "returnType": "String"}, "IntAsStringWithFormat": {"callableType": "function", "argName": ["a", "fmt"], "argType": ["Int", "String"], "returnType": "String"}, "MaybeBigIntAsInt": {"callableType": "function", "argName": ["a"], "argType": ["BigInt"], "returnType": "(Int,Bool)"}, "PauliArrayAsInt": {"callableType": "function", "argName": ["paulis"], "argType": ["Pauli[]"], "returnType": "Int"}, "RangeAsIntArray": {"callableType": "function", "argName": ["range"], "argType": ["Range"], "returnType": "Int[]"}, "ResultArrayAsBoolArray": {"callableType": "function", "argName": ["input"], "argType": ["Result[]"], "returnType": "Bool[]"}, "ResultArrayAsInt": {"callableType": "function", "argName": ["results"], "argType": ["Result[]"], "returnType": "Int"}, "ResultAsBool": {"callableType": "function", "argName": ["input"], "argType": ["Result"], "returnType": "Bool"}}, "Microsoft.Quantum.Core": {"Default": {"callableType": "function", "argName": [], "argType": [], "returnType": "'T"}, "Length": {"callableType": "function", "argName": ["a"], "argType": ["'T[]"], "returnType": "Int"}, "RangeEnd": {"callableType": "function", "argName": ["range"], "argType": ["Range"], "returnType": "Int"}, "RangeReverse": {"callableType": "function", "argName": ["range"], "argType": ["Range"], "returnType": "Range"}, "RangeStart": {"callableType": "function", "argName": ["range"], "argType": ["Range"], "returnType": "Int"}, "RangeStep": {"callableType": "function", "argName": ["range"], "argType": ["Range"], "returnType": "Int"}}, "Microsoft.Quantum.Diagnostics": {"AllEqualityFactB": {"callableType": "function", "argName": ["actual", "expected", "message"], "argType": ["Bool[]", "Bool[]", "String"], "returnType": "Unit"}, "AllEqualityFactI": {"callableType": "function", "argName": ["actual", "expected", "message"], "argType": ["Int[]", "Int[]", "String"], "returnType": "Unit"}, "Contradiction": {"callableType": "function", "argName": ["actual", "message"], "argType": ["Bool", "String"], "returnType": "Unit"}, "DumpMachine": {"callableType": "function", "argName": ["location"], "argType": ["'T"], "returnType": "Unit"}, "DumpRegister": {"callableType": "function", "argName": ["location", "qubits"], "argType": ["'T", "Qubit[]"], "returnType": "Unit"}, "EqualityFactB": {"callableType": "function", "argName": ["actual", "expected", "message"], "argType": ["Bool", "Bool", "String"], "returnType": "Unit"}, "EqualityFactC": {"callableType": "function", "argName": ["actual", "expected", "message"], "argType": ["Complex", "Complex", "String"], "returnType": "Unit"}, "EqualityFactCP": {"callableType": "function", "argName": ["actual", "expected", "message"], "argType": ["ComplexPolar", "ComplexPolar", "String"], "returnType": "Unit"}, "EqualityFactI": {"callableType": "function", "argName": ["actual", "expected", "message"], "argType": ["Int", "Int", "String"], "returnType": "Unit"}, "EqualityFactL": {"callableType": "function", "argName": ["actual", "expected", "message"], "argType": ["BigInt", "BigInt", "String"], "returnType": "Unit"}, "EqualityFactR": {"callableType": "function", "argName": ["actual", "expected", "message"], "argType": ["Result", "Result", "String"], "returnType": "Unit"}, "EqualityWithinToleranceFact": {"callableType": "function", "argName": ["actual", "expected", "tolerance"], "argType": ["Double", "Double", "Double"], "returnType": "Unit"}, "Fact": {"callableType": "function", "argName": ["actual", "message"], "argType": ["Bool", "String"], "returnType": "Unit"}, "FiniteFact": {"callableType": "function", "argName": ["d", "message"], "argType": ["Double", "String"], "returnType": "Unit"}, "NearEqualityFactC": {"callableType": "function", "argName": ["actual", "expected"], "argType": ["Complex", "Complex"], "returnType": "Unit"}, "NearEqualityFactCP": {"callableType": "function", "argName": ["actual", "expected"], "argType": ["ComplexPolar", "ComplexPolar"], "returnType": "Unit"}, "NearEqualityFactD": {"callableType": "function", "argName": ["actual", "expected"], "argType": ["Double", "Double"], "returnType": "Unit"}}, "Microsoft.Quantum.Environment": {}, "Microsoft.Quantum.ErrorCorrection": {"BitFlipCode": {"callableType": "function", "argName": [], "argType": [], "returnType": "QECC"}, "BitFlipRecoveryFn": {"callableType": "function", "argName": [], "argType": [], "returnType": "RecoveryFn"}, "FiveQubitCode": {"callableType": "function", "argName": [], "argType": [], "returnType": "QECC"}, "FiveQubitCodeRecoveryFn": {"callableType": "function", "argName": [], "argType": [], "returnType": "RecoveryFn"}, "SteaneCode": {"callableType": "function", "argName": [], "argType": [], "returnType": "CSS"}, "SteaneCodeRecoveryFns": {"callableType": "function", "argName": [], "argType": [], "returnType": "(RecoveryFn,RecoveryFn)"}, "SteaneCodeRecoveryX": {"callableType": "function", "argName": ["syndrome"], "argType": ["Syndrome"], "returnType": "Pauli[]"}, "SteaneCodeRecoveryZ": {"callableType": "function", "argName": ["syndrome"], "argType": ["Syndrome"], "returnType": "Pauli[]"}, "TableLookupRecovery": {"callableType": "function", "argName": ["table"], "argType": ["Pauli[][]"], "returnType": "RecoveryFn"}, "TableLookupRecoveryImpl": {"callableType": "function", "argName": ["table", "syndrome"], "argType": ["Pauli[][]", "Syndrome"], "returnType": "Pauli[]"}}, "Microsoft.Quantum.Extensions.Bitwise": {}, "Microsoft.Quantum.Extensions.Convert": {}, "Microsoft.Quantum.Extensions.Math": {}, "Microsoft.Quantum.Intrinsic": {"Message": {"callableType": "function", "argName": ["msg"], "argType": ["String"], "returnType": "Unit"}}, "Microsoft.Quantum.Logical": {"And": {"callableType": "function", "argName": ["a", "b"], "argType": ["Bool", "Bool"], "returnType": "Bool"}, "Conditioned": {"callableType": "function", "argName": ["condition", "ifTrue", "ifFalse"], "argType": ["Bool", "'T", "'T"], "returnType": "'T"}, "EqualB": {"callableType": "function", "argName": ["a", "b"], "argType": ["Bool", "Bool"], "returnType": "Bool"}, "EqualC": {"callableType": "function", "argName": ["a", "b"], "argType": ["Complex", "Complex"], "returnType": "Bool"}, "EqualCP": {"callableType": "function", "argName": ["a", "b"], "argType": ["ComplexPolar", "ComplexPolar"], "returnType": "Bool"}, "EqualD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Bool"}, "EqualI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Bool"}, "EqualL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "Bool"}, "EqualR": {"callableType": "function", "argName": ["a", "b"], "argType": ["Result", "Result"], "returnType": "Bool"}, "GreaterThanD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Bool"}, "GreaterThanI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Bool"}, "GreaterThanL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "Bool"}, "GreaterThanOrEqualD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Bool"}, "GreaterThanOrEqualI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Bool"}, "GreaterThanOrEqualL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "Bool"}, "LessThanD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Bool"}, "LessThanI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Bool"}, "LessThanL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "Bool"}, "LessThanOrEqualD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Bool"}, "LessThanOrEqualI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Bool"}, "LessThanOrEqualL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "Bool"}, "LexographicComparison": {"callableType": "function", "argName": ["elementComparison"], "argType": ["('T,'T) -> Bool"], "returnType": "('T[],'T[]) -> Bool"}, "NearlyEqualD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Bool"}, "Not": {"callableType": "function", "argName": ["value"], "argType": ["Bool"], "returnType": "Bool"}, "NotEqualB": {"callableType": "function", "argName": ["a", "b"], "argType": ["Bool", "Bool"], "returnType": "Bool"}, "NotEqualC": {"callableType": "function", "argName": ["a", "b"], "argType": ["Complex", "Complex"], "returnType": "Bool"}, "NotEqualCP": {"callableType": "function", "argName": ["a", "b"], "argType": ["ComplexPolar", "ComplexPolar"], "returnType": "Bool"}, "NotEqualD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Bool"}, "NotEqualI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Bool"}, "NotEqualL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "Bool"}, "NotEqualR": {"callableType": "function", "argName": ["a", "b"], "argType": ["Result", "Result"], "returnType": "Bool"}, "NotNearlyEqualD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Bool"}, "Or": {"callableType": "function", "argName": ["a", "b"], "argType": ["Bool", "Bool"], "returnType": "Bool"}, "Xor": {"callableType": "function", "argName": ["a", "b"], "argType": ["Bool", "Bool"], "returnType": "Bool"}}, "Microsoft.Quantum.MachineLearning": {"ApproximateInputEncoder": {"callableType": "function", "argName": ["tolerance", "coefficients"], "argType": ["Double", "Double[]"], "returnType": "StateGenerator"}, "CombinedStructure": {"callableType": "function", "argName": ["layers"], "argType": ["ControlledRotation[][]"], "returnType": "ControlledRotation[]"}, "CyclicEntanglingLayer": {"callableType": "function", "argName": ["nQubits", "axis", "stride"], "argType": ["Int", "Pauli", "Int"], "returnType": "ControlledRotation[]"}, "DefaultTrainingOptions": {"callableType": "function", "argName": [], "argType": [], "returnType": "TrainingOptions"}, "FeatureRegisterSize": {"callableType": "function", "argName": ["sample"], "argType": ["Double[]"], "returnType": "Int"}, "InferredLabel": {"callableType": "function", "argName": ["bias", "probability"], "argType": ["Double", "Double"], "returnType": "Int"}, "InferredLabels": {"callableType": "function", "argName": ["bias", "probabilities"], "argType": ["Double", "Double[]"], "returnType": "Int[]"}, "InputEncoder": {"callableType": "function", "argName": ["coefficients"], "argType": ["Double[]"], "returnType": "StateGenerator"}, "LocalRotationsLayer": {"callableType": "function", "argName": ["nQubits", "axis"], "argType": ["Int", "Pauli"], "returnType": "ControlledRotation[]"}, "Misclassifications": {"callableType": "function", "argName": ["inferredLabels", "actualLabels"], "argType": ["Int[]", "Int[]"], "returnType": "Int[]"}, "NMisclassifications": {"callableType": "function", "argName": ["proposed", "actual"], "argType": ["Int[]", "Int[]"], "returnType": "Int"}, "NQubitsRequired": {"callableType": "function", "argName": ["model"], "argType": ["SequentialModel"], "returnType": "Int"}, "PartialRotationsLayer": {"callableType": "function", "argName": ["idxsQubits", "axis"], "argType": ["Int[]", "Pauli"], "returnType": "ControlledRotation[]"}, "Sampled": {"callableType": "function", "argName": ["schedule", "values"], "argType": ["SamplingSchedule", "'T[]"], "returnType": "'T[]"}, "ScheduleLength": {"callableType": "function", "argName": ["schedule"], "argType": ["SamplingSchedule"], "returnType": "Int"}, "_Features": {"callableType": "function", "argName": ["sample"], "argType": ["LabeledSample"], "returnType": "Double[]"}, "_Label": {"callableType": "function", "argName": ["sample"], "argType": ["LabeledSample"], "returnType": "Int"}}, "Microsoft.Quantum.MachineLearning.Datasets": {}, "Microsoft.Quantum.Math": {"AbsComplex": {"callableType": "function", "argName": ["input"], "argType": ["Complex"], "returnType": "Double"}, "AbsComplexPolar": {"callableType": "function", "argName": ["input"], "argType": ["ComplexPolar"], "returnType": "Double"}, "AbsD": {"callableType": "function", "argName": ["a"], "argType": ["Double"], "returnType": "Double"}, "AbsI": {"callableType": "function", "argName": ["a"], "argType": ["Int"], "returnType": "Int"}, "AbsL": {"callableType": "function", "argName": ["a"], "argType": ["BigInt"], "returnType": "BigInt"}, "AbsSquaredComplex": {"callableType": "function", "argName": ["input"], "argType": ["Complex"], "returnType": "Double"}, "AbsSquaredComplexPolar": {"callableType": "function", "argName": ["input"], "argType": ["ComplexPolar"], "returnType": "Double"}, "ApproximateFactorial": {"callableType": "function", "argName": ["n"], "argType": ["Int"], "returnType": "Double"}, "ArcCos": {"callableType": "function", "argName": ["x"], "argType": ["Double"], "returnType": "Double"}, "ArcCosh": {"callableType": "function", "argName": ["x"], "argType": ["Double"], "returnType": "Double"}, "ArcSin": {"callableType": "function", "argName": ["y"], "argType": ["Double"], "returnType": "Double"}, "ArcSinh": {"callableType": "function", "argName": ["x"], "argType": ["Double"], "returnType": "Double"}, "ArcTan": {"callableType": "function", "argName": ["d"], "argType": ["Double"], "returnType": "Double"}, "ArcTan2": {"callableType": "function", "argName": ["y", "x"], "argType": ["Double", "Double"], "returnType": "Double"}, "ArcTanh": {"callableType": "function", "argName": ["x"], "argType": ["Double"], "returnType": "Double"}, "ArgComplex": {"callableType": "function", "argName": ["input"], "argType": ["Complex"], "returnType": "Double"}, "ArgComplexPolar": {"callableType": "function", "argName": ["input"], "argType": ["ComplexPolar"], "returnType": "Double"}, "Binom": {"callableType": "function", "argName": ["n", "k"], "argType": ["Int", "Int"], "returnType": "Int"}, "BitSizeI": {"callableType": "function", "argName": ["a"], "argType": ["Int"], "returnType": "Int"}, "BitSizeL": {"callableType": "function", "argName": ["a"], "argType": ["BigInt"], "returnType": "Int"}, "Ceiling": {"callableType": "function", "argName": ["value"], "argType": ["Double"], "returnType": "Int"}, "ComplexAsComplexPolar": {"callableType": "function", "argName": ["input"], "argType": ["Complex"], "returnType": "ComplexPolar"}, "ComplexPolarAsComplex": {"callableType": "function", "argName": ["input"], "argType": ["ComplexPolar"], "returnType": "Complex"}, "ContinuedFractionConvergentI": {"callableType": "function", "argName": ["fraction", "denominatorBound"], "argType": ["Fraction", "Int"], "returnType": "Fraction"}, "ContinuedFractionConvergentL": {"callableType": "function", "argName": ["fraction", "denominatorBound"], "argType": ["BigFraction", "BigInt"], "returnType": "BigFraction"}, "Cos": {"callableType": "function", "argName": ["theta"], "argType": ["Double"], "returnType": "Double"}, "Cosh": {"callableType": "function", "argName": ["d"], "argType": ["Double"], "returnType": "Double"}, "DivRemL": {"callableType": "function", "argName": ["dividend", "divisor"], "argType": ["BigInt", "BigInt"], "returnType": "(BigInt,BigInt)"}, "DividedByC": {"callableType": "function", "argName": ["a", "b"], "argType": ["Complex", "Complex"], "returnType": "Complex"}, "DividedByCP": {"callableType": "function", "argName": ["a", "b"], "argType": ["ComplexPolar", "ComplexPolar"], "returnType": "ComplexPolar"}, "DividedByD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Double"}, "DividedByI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "DividedByL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "E": {"callableType": "function", "argName": [], "argType": [], "returnType": "Double"}, "ExpD": {"callableType": "function", "argName": ["a"], "argType": ["Double"], "returnType": "Double"}, "ExpModI": {"callableType": "function", "argName": ["expBase", "power", "modulus"], "argType": ["Int", "Int", "Int"], "returnType": "Int"}, "ExpModL": {"callableType": "function", "argName": ["expBase", "power", "modulus"], "argType": ["BigInt", "BigInt", "BigInt"], "returnType": "BigInt"}, "ExtendedGreatestCommonDivisorI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "(Int,Int)"}, "ExtendedGreatestCommonDivisorL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "(BigInt,BigInt)"}, "FactorialI": {"callableType": "function", "argName": ["n"], "argType": ["Int"], "returnType": "Int"}, "FactorialL": {"callableType": "function", "argName": ["n"], "argType": ["Int"], "returnType": "BigInt"}, "Floor": {"callableType": "function", "argName": ["value"], "argType": ["Double"], "returnType": "Int"}, "GreatestCommonDivisorI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "GreatestCommonDivisorL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "HalfIntegerBinom": {"callableType": "function", "argName": ["k"], "argType": ["Int"], "returnType": "Double"}, "IEEERemainder": {"callableType": "function", "argName": ["x", "y"], "argType": ["Double", "Double"], "returnType": "Double"}, "InverseModI": {"callableType": "function", "argName": ["a", "modulus"], "argType": ["Int", "Int"], "returnType": "Int"}, "InverseModL": {"callableType": "function", "argName": ["a", "modulus"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "IsCoprimeI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Bool"}, "IsCoprimeL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "Bool"}, "IsFinite": {"callableType": "function", "argName": ["d"], "argType": ["Double"], "returnType": "Bool"}, "IsInfinite": {"callableType": "function", "argName": ["d"], "argType": ["Double"], "returnType": "Bool"}, "IsNaN": {"callableType": "function", "argName": ["d"], "argType": ["Double"], "returnType": "Bool"}, "LargestFixedPoint": {"callableType": "function", "argName": ["integerBits", "fractionalBits"], "argType": ["Int", "Int"], "returnType": "Double"}, "Lg": {"callableType": "function", "argName": ["input"], "argType": ["Double"], "returnType": "Double"}, "Log": {"callableType": "function", "argName": ["input"], "argType": ["Double"], "returnType": "Double"}, "Log10": {"callableType": "function", "argName": ["input"], "argType": ["Double"], "returnType": "Double"}, "LogFactorialD": {"callableType": "function", "argName": ["n"], "argType": ["Int"], "returnType": "Double"}, "LogGammaD": {"callableType": "function", "argName": ["x"], "argType": ["Double"], "returnType": "Double"}, "LogOf2": {"callableType": "function", "argName": [], "argType": [], "returnType": "Double"}, "Max": {"callableType": "function", "argName": ["values"], "argType": ["Int[]"], "returnType": "Int"}, "MaxD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Double"}, "MaxI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "MaxL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "Min": {"callableType": "function", "argName": ["values"], "argType": ["Int[]"], "returnType": "Int"}, "MinD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Double"}, "MinI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "MinL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "MinusC": {"callableType": "function", "argName": ["a", "b"], "argType": ["Complex", "Complex"], "returnType": "Complex"}, "MinusCP": {"callableType": "function", "argName": ["a", "b"], "argType": ["ComplexPolar", "ComplexPolar"], "returnType": "ComplexPolar"}, "MinusD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Double"}, "MinusI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "MinusL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "ModI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "ModL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "ModPowL": {"callableType": "function", "argName": ["value", "exponent", "modulus"], "argType": ["BigInt", "BigInt", "BigInt"], "returnType": "BigInt"}, "ModulusI": {"callableType": "function", "argName": ["value", "modulus"], "argType": ["Int", "Int"], "returnType": "Int"}, "ModulusL": {"callableType": "function", "argName": ["value", "modulus"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "NaN": {"callableType": "function", "argName": [], "argType": [], "returnType": "Double"}, "NegationC": {"callableType": "function", "argName": ["input"], "argType": ["Complex"], "returnType": "Complex"}, "NegationCP": {"callableType": "function", "argName": ["input"], "argType": ["ComplexPolar"], "returnType": "ComplexPolar"}, "NegationD": {"callableType": "function", "argName": ["input"], "argType": ["Double"], "returnType": "Double"}, "NegationI": {"callableType": "function", "argName": ["input"], "argType": ["Int"], "returnType": "Int"}, "NegationL": {"callableType": "function", "argName": ["input"], "argType": ["BigInt"], "returnType": "BigInt"}, "PI": {"callableType": "function", "argName": [], "argType": [], "returnType": "Double"}, "PNorm": {"callableType": "function", "argName": ["p", "array"], "argType": ["Double", "Double[]"], "returnType": "Double"}, "PNormalized": {"callableType": "function", "argName": ["p", "array"], "argType": ["Double", "Double[]"], "returnType": "Double[]"}, "PlusA": {"callableType": "function", "argName": ["a", "b"], "argType": ["'Element[]", "'Element[]"], "returnType": "'Element[]"}, "PlusC": {"callableType": "function", "argName": ["a", "b"], "argType": ["Complex", "Complex"], "returnType": "Complex"}, "PlusCP": {"callableType": "function", "argName": ["a", "b"], "argType": ["ComplexPolar", "ComplexPolar"], "returnType": "ComplexPolar"}, "PlusD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Double"}, "PlusI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "PlusL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "PowC": {"callableType": "function", "argName": ["a", "power"], "argType": ["Complex", "Complex"], "returnType": "Complex"}, "PowCP": {"callableType": "function", "argName": ["a", "power"], "argType": ["ComplexPolar", "ComplexPolar"], "returnType": "ComplexPolar"}, "PowD": {"callableType": "function", "argName": ["x", "y"], "argType": ["Double", "Double"], "returnType": "Double"}, "PowI": {"callableType": "function", "argName": ["a", "power"], "argType": ["Int", "Int"], "returnType": "Int"}, "PowL": {"callableType": "function", "argName": ["a", "power"], "argType": ["BigInt", "Int"], "returnType": "BigInt"}, "RealMod": {"callableType": "function", "argName": ["value", "modulo", "minValue"], "argType": ["Double", "Double", "Double"], "returnType": "Double"}, "Round": {"callableType": "function", "argName": ["value"], "argType": ["Double"], "returnType": "Int"}, "SignD": {"callableType": "function", "argName": ["a"], "argType": ["Double"], "returnType": "Int"}, "SignI": {"callableType": "function", "argName": ["a"], "argType": ["Int"], "returnType": "Int"}, "SignL": {"callableType": "function", "argName": ["a"], "argType": ["BigInt"], "returnType": "Int"}, "Sin": {"callableType": "function", "argName": ["theta"], "argType": ["Double"], "returnType": "Double"}, "Sinh": {"callableType": "function", "argName": ["d"], "argType": ["Double"], "returnType": "Double"}, "SmallestFixedPoint": {"callableType": "function", "argName": ["integerBits", "fractionalBits"], "argType": ["Int", "Int"], "returnType": "Double"}, "Sqrt": {"callableType": "function", "argName": ["d"], "argType": ["Double"], "returnType": "Double"}, "SquaredNorm": {"callableType": "function", "argName": ["array"], "argType": ["Double[]"], "returnType": "Double"}, "Tan": {"callableType": "function", "argName": ["d"], "argType": ["Double"], "returnType": "Double"}, "Tanh": {"callableType": "function", "argName": ["d"], "argType": ["Double"], "returnType": "Double"}, "TimesC": {"callableType": "function", "argName": ["a", "b"], "argType": ["Complex", "Complex"], "returnType": "Complex"}, "TimesCP": {"callableType": "function", "argName": ["a", "b"], "argType": ["ComplexPolar", "ComplexPolar"], "returnType": "ComplexPolar"}, "TimesD": {"callableType": "function", "argName": ["a", "b"], "argType": ["Double", "Double"], "returnType": "Double"}, "TimesI": {"callableType": "function", "argName": ["a", "b"], "argType": ["Int", "Int"], "returnType": "Int"}, "TimesL": {"callableType": "function", "argName": ["a", "b"], "argType": ["BigInt", "BigInt"], "returnType": "BigInt"}, "Truncate": {"callableType": "function", "argName": ["a"], "argType": ["Double"], "returnType": "Int"}, "_ContinuedFractionConvergentI": {"callableType": "function", "argName": ["signA", "signB", "r", "s", "t", "denominatorBound"], "argType": ["Int", "Int", "(Int,Int)", "(Int,Int)", "(Int,Int)", "Int"], "returnType": "Fraction"}, "_ContinuedFractionConvergentL": {"callableType": "function", "argName": ["signA", "signB", "r", "s", "t", "denominatorBound"], "argType": ["Int", "Int", "(BigInt,BigInt)", "(BigInt,BigInt)", "(BigInt,BigInt)", "BigInt"], "returnType": "BigFraction"}, "_ExtendedGreatestCommonDivisorI": {"callableType": "function", "argName": ["signA", "signB", "r", "s", "t"], "argType": ["Int", "Int", "(Int,Int)", "(Int,Int)", "(Int,Int)"], "returnType": "(Int,Int)"}, "_ExtendedGreatestCommonDivisorL": {"callableType": "function", "argName": ["signA", "signB", "r", "s", "t"], "argType": ["Int", "Int", "(BigInt,BigInt)", "(BigInt,BigInt)", "(BigInt,BigInt)"], "returnType": "(BigInt,BigInt)"}}, "Microsoft.Quantum.Measurement": {}, "Microsoft.Quantum.Optimization": {"LocalUnivariateMinimum": {"callableType": "function", "argName": ["fn", "bounds", "tolerance"], "argType": ["Double -> Double", "(Double,Double)", "Double"], "returnType": "UnivariateOptimizationResult"}}, "Microsoft.Quantum.Oracles": {"DeterministicStateOracleFromStateOracle": {"callableType": "function", "argName": ["idxFlagQubit", "stateOracle"], "argType": ["Int", "StateOracle"], "returnType": "DeterministicStateOracle"}, "ObliviousOracleFromDeterministicStateOracle": {"callableType": "function", "argName": ["ancillaOracle", "signalOracle"], "argType": ["DeterministicStateOracle", "ObliviousOracle"], "returnType": "ObliviousOracle"}, "OracleToDiscrete": {"callableType": "function", "argName": ["blackBoxOracle"], "argType": ["Qubit[] => Unit  is Adj + Ctl"], "returnType": "DiscreteOracle"}, "ReflectionOracleFromDeterministicStateOracle": {"callableType": "function", "argName": ["oracle"], "argType": ["DeterministicStateOracle"], "returnType": "ReflectionOracle"}, "StateOracleFromDeterministicStateOracle": {"callableType": "function", "argName": ["deterministicStateOracle"], "argType": ["DeterministicStateOracle"], "returnType": "StateOracle"}}, "Microsoft.Quantum.Preparation": {"BlochSphereCoordinates": {"callableType": "function", "argName": ["a0", "a1"], "argType": ["ComplexPolar", "ComplexPolar"], "returnType": "(ComplexPolar,Double,Double)"}, "PurifiedMixedState": {"callableType": "function", "argName": ["targetError", "coefficients"], "argType": ["Double", "Double[]"], "returnType": "MixedStatePreparation"}, "PurifiedMixedStateRequirements": {"callableType": "function", "argName": ["targetError", "nCoefficients"], "argType": ["Double", "Int"], "returnType": "MixedStatePreparationRequirements"}, "PurifiedMixedStateWithData": {"callableType": "function", "argName": ["targetError", "coefficients"], "argType": ["Double", "(Double,Bool[])[]"], "returnType": "MixedStatePreparation"}, "_CompileApproximateArbitraryStatePreparation": {"callableType": "function", "argName": ["tolerance", "coefficients", "nQubits"], "argType": ["Double", "ComplexPolar[]", "Int"], "returnType": "LittleEndian => Unit  is Adj + Ctl"}, "_QuantumROMDiscretization": {"callableType": "function", "argName": ["bitsPrecision", "coefficients"], "argType": ["Int", "Double[]"], "returnType": "(Double,Int[],Int[])"}}, "Microsoft.Quantum.Random": {"CategoricalDistribution": {"callableType": "function", "argName": ["probs"], "argType": ["Double[]"], "returnType": "DiscreteDistribution"}, "ContinuousUniformDistribution": {"callableType": "function", "argName": ["min", "max"], "argType": ["Double", "Double"], "returnType": "ContinuousDistribution"}, "DiscreteUniformDistribution": {"callableType": "function", "argName": ["min", "max"], "argType": ["Int", "Int"], "returnType": "DiscreteDistribution"}, "NormalDistribution": {"callableType": "function", "argName": ["mean", "variance"], "argType": ["Double", "Double"], "returnType": "ContinuousDistribution"}, "StandardNormalDistribution": {"callableType": "function", "argName": [], "argType": [], "returnType": "ContinuousDistribution"}, "TransformedContinuousDistribution": {"callableType": "function", "argName": ["transform", "distribution"], "argType": ["Double -> Double", "ContinuousDistribution"], "returnType": "ContinuousDistribution"}}, "Microsoft.Quantum.Research.Characterization": {}, "Microsoft.Quantum.Research.Chemistry": {"JWOptimizedFermionEvolutionFunction": {"callableType": "function", "argName": ["generatorIndex", "parityQubit"], "argType": ["GeneratorIndex", "Qubit"], "returnType": "EvolutionUnitary"}, "JWOptimizedGeneratorSystem": {"callableType": "function", "argName": ["data"], "argType": ["JWOptimizedHTerms"], "returnType": "GeneratorSystem"}, "JordanWignerOptimizedFermionEvolutionSet": {"callableType": "function", "argName": ["parityQubit"], "argType": ["Qubit"], "returnType": "EvolutionSet"}, "OptimizedTrotterStepOracle": {"callableType": "function", "argName": ["qSharpData", "trotterStepSize", "trotterOrder"], "argType": ["JordanWignerEncodingData", "Double", "Int"], "returnType": "(Int,(Double,Qubit[] => Unit  is Adj + Ctl))"}, "_DeltaParityCNOTbitstring": {"callableType": "function", "argName": ["prevFermionicTerm", "nextFermionicTerm"], "argType": ["Int[]", "Int[]"], "returnType": "(Int,Bool[])"}}, "Microsoft.Quantum.Simulation": {"AddGeneratorSystems": {"callableType": "function", "argName": ["generatorSystemA", "generatorSystemB"], "argType": ["GeneratorSystem", "GeneratorSystem"], "returnType": "GeneratorSystem"}, "BlockEncodingByLCU": {"callableType": "function", "argName": ["statePreparation", "selector"], "argType": ["'T => Unit  is Adj + Ctl", "('T,'S) => Unit  is Adj + Ctl"], "returnType": "('T,'S) => Unit  is Adj + Ctl"}, "BlockEncodingReflectionByLCU": {"callableType": "function", "argName": ["statePreparation", "selector"], "argType": ["Qubit[] => Unit  is Adj + Ctl", "(Qubit[],Qubit[]) => Unit  is Adj + Ctl"], "returnType": "BlockEncodingReflection"}, "BlockEncodingToReflection": {"callableType": "function", "argName": ["blockEncoding"], "argType": ["BlockEncoding"], "returnType": "BlockEncodingReflection"}, "GetGeneratorSystemFunction": {"callableType": "function", "argName": ["generatorSystem"], "argType": ["GeneratorSystem"], "returnType": "Int -> GeneratorIndex"}, "GetGeneratorSystemNTerms": {"callableType": "function", "argName": ["generatorSystem"], "argType": ["GeneratorSystem"], "returnType": "Int"}, "IdentityGeneratorIndex": {"callableType": "function", "argName": ["idxTerm"], "argType": ["Int"], "returnType": "GeneratorIndex"}, "IdentityGeneratorSystem": {"callableType": "function", "argName": [], "argType": [], "returnType": "GeneratorSystem"}, "IdentityTimeDependentGeneratorSystem": {"callableType": "function", "argName": [], "argType": [], "returnType": "TimeDependentGeneratorSystem"}, "IntToPauli": {"callableType": "function", "argName": ["idx"], "argType": ["Int"], "returnType": "Pauli"}, "InterpolateGeneratorSystems": {"callableType": "function", "argName": ["generatorSystemStart", "generatorSystemEnd"], "argType": ["GeneratorSystem", "GeneratorSystem"], "returnType": "TimeDependentGeneratorSystem"}, "InterpolatedEvolution": {"callableType": "function", "argName": ["interpolationTime", "evolutionGeneratorStart", "evolutionGeneratorEnd", "timeDependentSimulationAlgorithm"], "argType": ["Double", "EvolutionGenerator", "EvolutionGenerator", "TimeDependentSimulationAlgorithm"], "returnType": "Qubit[] => Unit  is Adj + Ctl"}, "IntsToPaulis": {"callableType": "function", "argName": ["ints"], "argType": ["Int[]"], "returnType": "Pauli[]"}, "MultiplyGeneratorIndex": {"callableType": "function", "argName": ["multiplier", "generatorIndex"], "argType": ["Double", "GeneratorIndex"], "returnType": "GeneratorIndex"}, "MultiplyGeneratorSystem": {"callableType": "function", "argName": ["multiplier", "generatorSystem"], "argType": ["Double", "GeneratorSystem"], "returnType": "GeneratorSystem"}, "PauliBlockEncoding": {"callableType": "function", "argName": ["generatorSystem"], "argType": ["GeneratorSystem"], "returnType": "(Double,BlockEncodingReflection)"}, "PauliCoefficientFromGenIdx": {"callableType": "function", "argName": ["generatorIndex"], "argType": ["GeneratorIndex"], "returnType": "Double"}, "PauliEvolutionFunction": {"callableType": "function", "argName": ["generatorIndex"], "argType": ["GeneratorIndex"], "returnType": "EvolutionUnitary"}, "PauliEvolutionSet": {"callableType": "function", "argName": [], "argType": [], "returnType": "EvolutionSet"}, "PauliStringFromGenIdx": {"callableType": "function", "argName": ["generatorIndex"], "argType": ["GeneratorIndex"], "returnType": "(Pauli[],Int[])"}, "QuantumWalkByQubitization": {"callableType": "function", "argName": ["blockEncoding"], "argType": ["BlockEncodingReflection"], "returnType": "(Qubit[],Qubit[]) => Unit  is Adj + Ctl"}, "SumGeneratorSystems": {"callableType": "function", "argName": ["generatorSystems"], "argType": ["GeneratorSystem[]"], "returnType": "GeneratorSystem"}, "TimeDependentTrotterSimulationAlgorithm": {"callableType": "function", "argName": ["trotterStepSize", "trotterOrder"], "argType": ["Double", "Int"], "returnType": "TimeDependentSimulationAlgorithm"}, "TrotterSimulationAlgorithm": {"callableType": "function", "argName": ["trotterStepSize", "trotterOrder"], "argType": ["Double", "Int"], "returnType": "SimulationAlgorithm"}, "TrotterStep": {"callableType": "function", "argName": ["evolutionGenerator", "trotterOrder", "trotterStepSize"], "argType": ["EvolutionGenerator", "Int", "Double"], "returnType": "Qubit[] => Unit  is Adj + Ctl"}}, "Microsoft.Quantum.Simulation.QuantumProcessor.Extensions": {}, "Microsoft.Quantum.Synthesis": {"Action1C": {"callableType": "function", "argName": ["op", "pauli"], "argType": ["SingleQubitClifford", "Pauli"], "returnType": "Pauli"}, "EqualityFact1C": {"callableType": "function", "argName": ["actual", "expected", "message"], "argType": ["SingleQubitClifford", "SingleQubitClifford", "String"], "returnType": "Unit"}, "Identity1C": {"callableType": "function", "argName": [], "argType": [], "returnType": "SingleQubitClifford"}, "IdentityFact1C": {"callableType": "function", "argName": ["actual", "message"], "argType": ["SingleQubitClifford", "String"], "returnType": "Unit"}, "Inverse1C": {"callableType": "function", "argName": ["op"], "argType": ["SingleQubitClifford"], "returnType": "SingleQubitClifford"}, "PauliAsSingleQubitClifford": {"callableType": "function", "argName": ["pauli"], "argType": ["Pauli"], "returnType": "SingleQubitClifford"}, "SingleQubitCliffordAsOperation": {"callableType": "function", "argName": ["clifford"], "argType": ["SingleQubitClifford"], "returnType": "Qubit => Unit  is Adj + Ctl"}, "Times1C": {"callableType": "function", "argName": ["left", "right"], "argType": ["SingleQubitClifford", "SingleQubitClifford"], "returnType": "SingleQubitClifford"}, "_TwoLevelDecomposition": {"callableType": "function", "argName": ["unitary"], "argType": ["Complex[][]"], "returnType": "(Complex[][],Int,Int)[]"}}, "Microsoft.Quantum.Targeting": {}}