{"Microsoft.Quantum.AmplitudeAmplification": {"ApplyAmplitudeAmplification": {"callableType": "operation", "argName": ["phases", "startStateReflection", "targetStateReflection", "target"], "argType": ["ReflectionPhases", "ReflectionOracle", "ReflectionOracle", "Qubit[]"], "returnType": "Unit"}, "ApplyFixedPointAmplification": {"callableType": "operation", "argName": ["statePrepOracle", "startQubits"], "argType": ["StateOracle", "Qubit[]"], "returnType": "Unit"}, "ApplyObliviousAmplitudeAmplification": {"callableType": "operation", "argName": ["phases", "startStateReflection", "targetStateReflection", "signalOracle", "auxiliaryRegister", "systemRegister"], "argType": ["ReflectionPhases", "ReflectionOracle", "ReflectionOracle", "ObliviousOracle", "Qubit[]", "Qubit[]"], "returnType": "Unit"}}, "Microsoft.Quantum.Arithmetic": {"AddConstantFxP": {"callableType": "operation", "argName": ["constant", "fp"], "argType": ["Double", "FixedPoint"], "returnType": "Unit"}, "AddFxP": {"callableType": "operation", "argName": ["fp1", "fp2"], "argType": ["FixedPoint", "FixedPoint"], "returnType": "Unit"}, "AddI": {"callableType": "operation", "argName": ["xs", "ys"], "argType": ["LittleEndian", "LittleEndian"], "returnType": "Unit"}, "ApplyLEOperationOnPhaseLE": {"callableType": "operation", "argName": ["op", "target"], "argType": ["LittleEndian => Unit", "PhaseLittleEndian"], "returnType": "Unit"}, "ApplyLEOperationOnPhaseLEA": {"callableType": "operation", "argName": ["op", "target"], "argType": ["LittleEndian => Unit  is Adj", "PhaseLittleEndian"], "returnType": "Unit"}, "ApplyLEOperationOnPhaseLEC": {"callableType": "operation", "argName": ["op", "target"], "argType": ["LittleEndian => Unit  is Ctl", "PhaseLittleEndian"], "returnType": "Unit"}, "ApplyLEOperationOnPhaseLECA": {"callableType": "operation", "argName": ["op", "target"], "argType": ["LittleEndian => Unit  is Adj + Ctl", "PhaseLittleEndian"], "returnType": "Unit"}, "ApplyMajorityInPlace": {"callableType": "operation", "argName": ["output", "input"], "argType": ["Qubit", "Qubit[]"], "returnType": "Unit"}, "ApplyPhaseLEOperationOnLE": {"callableType": "operation", "argName": ["op", "target"], "argType": ["PhaseLittleEndian => Unit", "LittleEndian"], "returnType": "Unit"}, "ApplyPhaseLEOperationOnLEA": {"callableType": "operation", "argName": ["op", "target"], "argType": ["PhaseLittleEndian => Unit  is Adj", "LittleEndian"], "returnType": "Unit"}, "ApplyPhaseLEOperationOnLEC": {"callableType": "operation", "argName": ["op", "target"], "argType": ["PhaseLittleEndian => Unit  is Ctl", "LittleEndian"], "returnType": "Unit"}, "ApplyPhaseLEOperationOnLECA": {"callableType": "operation", "argName": ["op", "target"], "argType": ["PhaseLittleEndian => Unit  is Adj + Ctl", "LittleEndian"], "returnType": "Unit"}, "ApplyReversedOpBE": {"callableType": "operation", "argName": ["op", "register"], "argType": ["BigEndian => Unit", "LittleEndian"], "returnType": "Unit"}, "ApplyReversedOpBEA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["BigEndian => Unit  is Adj", "LittleEndian"], "returnType": "Unit"}, "ApplyReversedOpBEC": {"callableType": "operation", "argName": ["op", "register"], "argType": ["BigEndian => Unit  is Ctl", "LittleEndian"], "returnType": "Unit"}, "ApplyReversedOpBECA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["BigEndian => Unit  is Adj + Ctl", "LittleEndian"], "returnType": "Unit"}, "ApplyReversedOpLE": {"callableType": "operation", "argName": ["op", "register"], "argType": ["LittleEndian => Unit", "BigEndian"], "returnType": "Unit"}, "ApplyReversedOpLEA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["LittleEndian => Unit  is Adj", "BigEndian"], "returnType": "Unit"}, "ApplyReversedOpLEC": {"callableType": "operation", "argName": ["op", "register"], "argType": ["LittleEndian => Unit  is Ctl", "BigEndian"], "returnType": "Unit"}, "ApplyReversedOpLECA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["LittleEndian => Unit  is Adj + Ctl", "BigEndian"], "returnType": "Unit"}, "ApplyXorInPlace": {"callableType": "operation", "argName": ["value", "target"], "argType": ["Int", "LittleEndian"], "returnType": "Unit"}, "AssertAllZeroFxP": {"callableType": "operation", "argName": ["fp"], "argType": ["FixedPoint"], "returnType": "Unit"}, "AssertMostSignificantBit": {"callableType": "operation", "argName": ["value", "number"], "argType": ["Result", "LittleEndian"], "returnType": "Unit"}, "AssertPhaseLessThan": {"callableType": "operation", "argName": ["value", "number"], "argType": ["Int", "PhaseLittleEndian"], "returnType": "Unit"}, "AssertProbInt": {"callableType": "operation", "argName": ["stateIndex", "expected", "qubits", "tolerance"], "argType": ["Int", "Double", "LittleEndian", "Double"], "returnType": "Unit"}, "Carry": {"callableType": "operation", "argName": ["carryIn", "summand1", "summand2", "carryOut"], "argType": ["Qubit", "Qubit", "Qubit", "Qubit"], "returnType": "Unit"}, "CompareGTI": {"callableType": "operation", "argName": ["xs", "ys", "result"], "argType": ["LittleEndian", "LittleEndian", "Qubit"], "returnType": "Unit"}, "CompareGTSI": {"callableType": "operation", "argName": ["xs", "ys", "result"], "argType": ["SignedLittleEndian", "SignedLittleEndian", "Qubit"], "returnType": "Unit"}, "CompareGreaterThanFxP": {"callableType": "operation", "argName": ["fp1", "fp2", "result"], "argType": ["FixedPoint", "FixedPoint", "Qubit"], "returnType": "Unit"}, "CompareUsingRippleCarry": {"callableType": "operation", "argName": ["x", "y", "output"], "argType": ["LittleEndian", "LittleEndian", "Qubit"], "returnType": "Unit"}, "ComputeReciprocalFxP": {"callableType": "operation", "argName": ["x", "result"], "argType": ["FixedPoint", "FixedPoint"], "returnType": "Unit"}, "ComputeReciprocalI": {"callableType": "operation", "argName": ["xs", "result"], "argType": ["LittleEndian", "LittleEndian"], "returnType": "Unit"}, "CopyMostSignificantBit": {"callableType": "operation", "argName": ["from", "target"], "argType": ["LittleEndian", "Qubit"], "returnType": "Unit"}, "DivideI": {"callableType": "operation", "argName": ["xs", "ys", "result"], "argType": ["LittleEndian", "LittleEndian", "LittleEndian"], "returnType": "Unit"}, "EvaluateEvenPolynomialFxP": {"callableType": "operation", "argName": ["coefficients", "fpx", "result"], "argType": ["Double[]", "FixedPoint", "FixedPoint"], "returnType": "Unit"}, "EvaluateOddPolynomialFxP": {"callableType": "operation", "argName": ["coefficients", "fpx", "result"], "argType": ["Double[]", "FixedPoint", "FixedPoint"], "returnType": "Unit"}, "EvaluatePolynomialFxP": {"callableType": "operation", "argName": ["coefficients", "fpx", "result"], "argType": ["Double[]", "FixedPoint", "FixedPoint"], "returnType": "Unit"}, "GreaterThan": {"callableType": "operation", "argName": ["xs", "ys", "result"], "argType": ["LittleEndian", "LittleEndian", "Qubit"], "returnType": "Unit"}, "IncrementByInteger": {"callableType": "operation", "argName": ["increment", "target"], "argType": ["Int", "LittleEndian"], "returnType": "Unit"}, "IncrementByModularInteger": {"callableType": "operation", "argName": ["increment", "modulus", "target"], "argType": ["Int", "Int", "LittleEndian"], "returnType": "Unit"}, "IncrementPhaseByInteger": {"callableType": "operation", "argName": ["increment", "target"], "argType": ["Int", "PhaseLittleEndian"], "returnType": "Unit"}, "IncrementPhaseByModularInteger": {"callableType": "operation", "argName": ["increment", "modulus", "target"], "argType": ["Int", "Int", "PhaseLittleEndian"], "returnType": "Unit"}, "Invert2sSI": {"callableType": "operation", "argName": ["xs"], "argType": ["SignedLittleEndian"], "returnType": "Unit"}, "InvertFxP": {"callableType": "operation", "argName": ["fp"], "argType": ["FixedPoint"], "returnType": "Unit"}, "MAJ": {"callableType": "operation", "argName": ["input0", "input1", "target"], "argType": ["Qubit", "Qubit", "Qubit"], "returnType": "Unit"}, "MeasureFxP": {"callableType": "operation", "argName": ["fp"], "argType": ["FixedPoint"], "returnType": "Double"}, "MeasureInteger": {"callableType": "operation", "argName": ["target"], "argType": ["LittleEndian"], "returnType": "Int"}, "MultiplyAndAddByModularInteger": {"callableType": "operation", "argName": ["constMultiplier", "modulus", "multiplicand", "summand"], "argType": ["Int", "Int", "LittleEndian", "LittleEndian"], "returnType": "Unit"}, "MultiplyAndAddPhaseByModularInteger": {"callableType": "operation", "argName": ["constMultiplier", "modulus", "multiplicand", "phaseSummand"], "argType": ["Int", "Int", "LittleEndian", "PhaseLittleEndian"], "returnType": "Unit"}, "MultiplyByModularInteger": {"callableType": "operation", "argName": ["constMultiplier", "modulus", "multiplicand"], "argType": ["Int", "Int", "LittleEndian"], "returnType": "Unit"}, "MultiplyFxP": {"callableType": "operation", "argName": ["fp1", "fp2", "result"], "argType": ["FixedPoint", "FixedPoint", "FixedPoint"], "returnType": "Unit"}, "MultiplyI": {"callableType": "operation", "argName": ["xs", "ys", "result"], "argType": ["LittleEndian", "LittleEndian", "LittleEndian"], "returnType": "Unit"}, "MultiplySI": {"callableType": "operation", "argName": ["xs", "ys", "result"], "argType": ["SignedLittleEndian", "SignedLittleEndian", "SignedLittleEndian"], "returnType": "Unit"}, "PrepareFxP": {"callableType": "operation", "argName": ["constant", "fp"], "argType": ["Double", "FixedPoint"], "returnType": "Unit"}, "ReflectAboutInteger": {"callableType": "operation", "argName": ["index", "reg"], "argType": ["Int", "LittleEndian"], "returnType": "Unit"}, "RippleCarryAdderCDKM": {"callableType": "operation", "argName": ["xs", "ys", "carry"], "argType": ["LittleEndian", "LittleEndian", "Qubit"], "returnType": "Unit"}, "RippleCarryAdderD": {"callableType": "operation", "argName": ["xs", "ys", "carry"], "argType": ["LittleEndian", "LittleEndian", "Qubit"], "returnType": "Unit"}, "RippleCarryAdderNoCarryTTK": {"callableType": "operation", "argName": ["xs", "ys"], "argType": ["LittleEndian", "LittleEndian"], "returnType": "Unit"}, "RippleCarryAdderTTK": {"callableType": "operation", "argName": ["xs", "ys", "carry"], "argType": ["LittleEndian", "LittleEndian", "Qubit"], "returnType": "Unit"}, "SquareFxP": {"callableType": "operation", "argName": ["fp", "result"], "argType": ["FixedPoint", "FixedPoint"], "returnType": "Unit"}, "SquareI": {"callableType": "operation", "argName": ["xs", "result"], "argType": ["LittleEndian", "LittleEndian"], "returnType": "Unit"}, "SquareSI": {"callableType": "operation", "argName": ["xs", "result"], "argType": ["SignedLittleEndian", "SignedLittleEndian"], "returnType": "Unit"}, "SubtractFxP": {"callableType": "operation", "argName": ["minuend", "subtrahend"], "argType": ["FixedPoint", "FixedPoint"], "returnType": "Unit"}, "Sum": {"callableType": "operation", "argName": ["carryIn", "summand1", "summand2"], "argType": ["Qubit", "Qubit", "Qubit"], "returnType": "Unit"}}, "Microsoft.Quantum.Arrays": {"ApplyToEachWindow": {"callableType": "operation", "argName": ["windowLen", "op", "register"], "argType": ["Int", "(Int,'T[]) => Unit", "'T[]"], "returnType": "Unit"}, "ApplyToEachWindowA": {"callableType": "operation", "argName": ["windowLen", "op", "register"], "argType": ["Int", "(Int,'T[]) => Unit  is Adj", "'T[]"], "returnType": "Unit"}, "ApplyToEachWindowC": {"callableType": "operation", "argName": ["windowLen", "op", "register"], "argType": ["Int", "(Int,'T[]) => Unit  is Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToEachWindowCA": {"callableType": "operation", "argName": ["windowLen", "op", "register"], "argType": ["Int", "(Int,'T[]) => Unit  is Adj + Ctl", "'T[]"], "returnType": "Unit"}, "DrawMany": {"callableType": "operation", "argName": ["op", "nSamples", "input"], "argType": ["'TInput => 'TOutput", "Int", "'TInput"], "returnType": "'TOutput[]"}, "ForEach": {"callableType": "operation", "argName": ["action", "array"], "argType": ["'T => 'U", "'T[]"], "returnType": "'U[]"}}, "Microsoft.Quantum.Bitwise": {}, "Microsoft.Quantum.Canon": {"AndLadder": {"callableType": "operation", "argName": ["ccnot", "controls", "targets"], "argType": ["CCNOTop", "Qubit[]", "Qubit[]"], "returnType": "Unit"}, "ApplyAnd": {"callableType": "operation", "argName": ["control1", "control2", "target"], "argType": ["Qubit", "Qubit", "Qubit"], "returnType": "Unit"}, "ApplyCCNOTChain": {"callableType": "operation", "argName": ["register", "targets"], "argType": ["Qubit[]", "Qubit[]"], "returnType": "Unit"}, "ApplyCNOTChain": {"callableType": "operation", "argName": ["qubits"], "argType": ["Qubit[]"], "returnType": "Unit"}, "ApplyCNOTChainWithTarget": {"callableType": "operation", "argName": ["qubits", "targetQubit"], "argType": ["Qubit[]", "Qubit"], "returnType": "Unit"}, "ApplyControlledOnBitString": {"callableType": "operation", "argName": ["bits", "oracle", "controlRegister", "targetRegister"], "argType": ["Bool[]", "'T => Unit  is Adj + Ctl", "Qubit[]", "'T"], "returnType": "Unit"}, "ApplyControlledOnInt": {"callableType": "operation", "argName": ["numberState", "oracle", "controlRegister", "targetRegister"], "argType": ["Int", "'T => Unit  is Adj + Ctl", "Qubit[]", "'T"], "returnType": "Unit"}, "ApplyDiagonalUnitary": {"callableType": "operation", "argName": ["coefficients", "qubits"], "argType": ["Double[]", "LittleEndian"], "returnType": "Unit"}, "ApplyFermionicSWAP": {"callableType": "operation", "argName": ["qubit1", "qubit2"], "argType": ["Qubit", "Qubit"], "returnType": "Unit"}, "ApplyIf": {"callableType": "operation", "argName": ["bit", "op", "target"], "argType": ["Bool", "'T => Unit", "'T"], "returnType": "Unit"}, "ApplyIfA": {"callableType": "operation", "argName": ["bit", "op", "target"], "argType": ["Bool", "'T => Unit  is Adj", "'T"], "returnType": "Unit"}, "ApplyIfC": {"callableType": "operation", "argName": ["bit", "op", "target"], "argType": ["Bool", "'T => Unit  is Ctl", "'T"], "returnType": "Unit"}, "ApplyIfCA": {"callableType": "operation", "argName": ["bit", "op", "target"], "argType": ["Bool", "'T => Unit  is Adj + Ctl", "'T"], "returnType": "Unit"}, "ApplyIfElseB": {"callableType": "operation", "argName": ["bit", "trueOp", "trueInput", "falseOp", "falseInput"], "argType": ["Bool", "'T => Unit", "'T", "'U => Unit", "'U"], "returnType": "Unit"}, "ApplyIfElseBA": {"callableType": "operation", "argName": ["bit", "trueOp", "trueInput", "falseOp", "falseInput"], "argType": ["Bool", "'T => Unit  is Adj", "'T", "'U => Unit  is Adj", "'U"], "returnType": "Unit"}, "ApplyIfElseBC": {"callableType": "operation", "argName": ["bit", "trueOp", "trueInput", "falseOp", "falseInput"], "argType": ["Bool", "'T => Unit  is Ctl", "'T", "'U => Unit  is Ctl", "'U"], "returnType": "Unit"}, "ApplyIfElseBCA": {"callableType": "operation", "argName": ["bit", "trueOp", "trueInput", "falseOp", "falseInput"], "argType": ["Bool", "'T => Unit  is Adj + Ctl", "'T", "'U => Unit  is Adj + Ctl", "'U"], "returnType": "Unit"}, "ApplyIfElseR": {"callableType": "operation", "argName": ["result", "zeroOp", "zeroInput", "oneOp", "oneInput"], "argType": ["Result", "'T => Unit", "'T", "'U => Unit", "'U"], "returnType": "Unit"}, "ApplyIfElseRA": {"callableType": "operation", "argName": ["result", "zeroOp", "zeroInput", "oneOp", "oneInput"], "argType": ["Result", "'T => Unit  is Adj", "'T", "'U => Unit  is Adj", "'U"], "returnType": "Unit"}, "ApplyIfElseRC": {"callableType": "operation", "argName": ["result", "zeroOp", "zeroInput", "oneOp", "oneInput"], "argType": ["Result", "'T => Unit  is Ctl", "'T", "'U => Unit  is Ctl", "'U"], "returnType": "Unit"}, "ApplyIfElseRCA": {"callableType": "operation", "argName": ["result", "zeroOp", "zeroInput", "oneOp", "oneInput"], "argType": ["Result", "'T => Unit  is Adj + Ctl", "'T", "'U => Unit  is Adj + Ctl", "'U"], "returnType": "Unit"}, "ApplyIfOne": {"callableType": "operation", "argName": ["result", "op", "target"], "argType": ["Result", "'T => Unit", "'T"], "returnType": "Unit"}, "ApplyIfOneA": {"callableType": "operation", "argName": ["result", "op", "target"], "argType": ["Result", "'T => Unit  is Adj", "'T"], "returnType": "Unit"}, "ApplyIfOneC": {"callableType": "operation", "argName": ["result", "op", "target"], "argType": ["Result", "'T => Unit  is Ctl", "'T"], "returnType": "Unit"}, "ApplyIfOneCA": {"callableType": "operation", "argName": ["result", "op", "target"], "argType": ["Result", "'T => Unit  is Adj + Ctl", "'T"], "returnType": "Unit"}, "ApplyIfZero": {"callableType": "operation", "argName": ["result", "op", "target"], "argType": ["Result", "'T => Unit", "'T"], "returnType": "Unit"}, "ApplyIfZeroA": {"callableType": "operation", "argName": ["result", "op", "target"], "argType": ["Result", "'T => Unit  is Adj", "'T"], "returnType": "Unit"}, "ApplyIfZeroC": {"callableType": "operation", "argName": ["result", "op", "target"], "argType": ["Result", "'T => Unit  is Ctl", "'T"], "returnType": "Unit"}, "ApplyIfZeroCA": {"callableType": "operation", "argName": ["result", "op", "target"], "argType": ["Result", "'T => Unit  is Adj + Ctl", "'T"], "returnType": "Unit"}, "ApplyLowDepthAnd": {"callableType": "operation", "argName": ["control1", "control2", "target"], "argType": ["Qubit", "Qubit", "Qubit"], "returnType": "Unit"}, "ApplyMultiControlledC": {"callableType": "operation", "argName": ["singlyControlledOp", "ccnot", "controls", "targets"], "argType": ["Qubit[] => Unit", "CCNOTop", "Qubit[]", "Qubit[]"], "returnType": "Unit"}, "ApplyMultiControlledCA": {"callableType": "operation", "argName": ["singlyControlledOp", "ccnot", "controls", "targets"], "argType": ["Qubit[] => Unit  is Adj", "CCNOTop", "Qubit[]", "Qubit[]"], "returnType": "Unit"}, "ApplyOpRepeatedlyOver": {"callableType": "operation", "argName": ["op", "targets", "register"], "argType": ["Qubit[] => Unit", "Int[][]", "Qubit[]"], "returnType": "Unit"}, "ApplyOpRepeatedlyOverA": {"callableType": "operation", "argName": ["op", "targets", "register"], "argType": ["Qubit[] => Unit  is Adj", "Int[][]", "Qubit[]"], "returnType": "Unit"}, "ApplyOpRepeatedlyOverC": {"callableType": "operation", "argName": ["op", "targets", "register"], "argType": ["Qubit[] => Unit  is Ctl", "Int[][]", "Qubit[]"], "returnType": "Unit"}, "ApplyOpRepeatedlyOverCA": {"callableType": "operation", "argName": ["op", "targets", "register"], "argType": ["Qubit[] => Unit  is Adj + Ctl", "Int[][]", "Qubit[]"], "returnType": "Unit"}, "ApplyP": {"callableType": "operation", "argName": ["pauli", "target"], "argType": ["Pauli", "Qubit"], "returnType": "Unit"}, "ApplyPauli": {"callableType": "operation", "argName": ["pauli", "target"], "argType": ["Pauli[]", "Qubit[]"], "returnType": "Unit"}, "ApplyPauliFromBitString": {"callableType": "operation", "argName": ["pauli", "bitApply", "bits", "qubits"], "argType": ["Pauli", "Bool", "Bool[]", "Qubit[]"], "returnType": "Unit"}, "ApplyQuantumFourierTransform": {"callableType": "operation", "argName": ["qs"], "argType": ["LittleEndian"], "returnType": "Unit"}, "ApplySeriesOfOps": {"callableType": "operation", "argName": ["listOfOps", "targets", "register"], "argType": ["'T[] => Unit []", "Int[][]", "'T[]"], "returnType": "Unit"}, "ApplySeriesOfOpsA": {"callableType": "operation", "argName": ["listOfOps", "targets", "register"], "argType": ["'T[] => Unit  is Adj[]", "Int[][]", "'T[]"], "returnType": "Unit"}, "ApplySeriesOfOpsC": {"callableType": "operation", "argName": ["listOfOps", "targets", "register"], "argType": ["'T[] => Unit  is Ctl[]", "Int[][]", "'T[]"], "returnType": "Unit"}, "ApplySeriesOfOpsCA": {"callableType": "operation", "argName": ["listOfOps", "targets", "register"], "argType": ["'T[] => Unit  is Adj + Ctl[]", "Int[][]", "'T[]"], "returnType": "Unit"}, "ApplyToEach": {"callableType": "operation", "argName": ["singleElementOperation", "register"], "argType": ["'T => Unit", "'T[]"], "returnType": "Unit"}, "ApplyToEachA": {"callableType": "operation", "argName": ["singleElementOperation", "register"], "argType": ["'T => Unit  is Adj", "'T[]"], "returnType": "Unit"}, "ApplyToEachC": {"callableType": "operation", "argName": ["singleElementOperation", "register"], "argType": ["'T => Unit  is Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToEachCA": {"callableType": "operation", "argName": ["singleElementOperation", "register"], "argType": ["'T => Unit  is Adj + Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToEachIndex": {"callableType": "operation", "argName": ["singleElementOperation", "register"], "argType": ["(Int,'T) => Unit", "'T[]"], "returnType": "Unit"}, "ApplyToEachIndexA": {"callableType": "operation", "argName": ["singleElementOperation", "register"], "argType": ["(Int,'T) => Unit  is Adj", "'T[]"], "returnType": "Unit"}, "ApplyToEachIndexC": {"callableType": "operation", "argName": ["singleElementOperation", "register"], "argType": ["(Int,'T) => Unit  is Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToEachIndexCA": {"callableType": "operation", "argName": ["singleElementOperation", "register"], "argType": ["(Int,'T) => Unit  is Adj + Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToElement": {"callableType": "operation", "argName": ["op", "index", "targets"], "argType": ["'T => Unit", "Int", "'T[]"], "returnType": "Unit"}, "ApplyToElementA": {"callableType": "operation", "argName": ["op", "index", "targets"], "argType": ["'T => Unit  is Adj", "Int", "'T[]"], "returnType": "Unit"}, "ApplyToElementC": {"callableType": "operation", "argName": ["op", "index", "targets"], "argType": ["'T => Unit  is Ctl", "Int", "'T[]"], "returnType": "Unit"}, "ApplyToElementCA": {"callableType": "operation", "argName": ["op", "index", "targets"], "argType": ["'T => Unit  is Adj + Ctl", "Int", "'T[]"], "returnType": "Unit"}, "ApplyToFirstQubit": {"callableType": "operation", "argName": ["op", "register"], "argType": ["Qubit => Unit", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstQubitA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["Qubit => Unit  is Adj", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstQubitC": {"callableType": "operation", "argName": ["op", "register"], "argType": ["Qubit => Unit  is Ctl", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstQubitCA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["Qubit => Unit  is Adj + Ctl", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstThreeQubits": {"callableType": "operation", "argName": ["op", "register"], "argType": ["(Qubit,Qubit,Qubit) => Unit", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstThreeQubitsA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["(Qubit,Qubit,Qubit) => Unit  is Adj", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstThreeQubitsC": {"callableType": "operation", "argName": ["op", "register"], "argType": ["(Qubit,Qubit,Qubit) => Unit  is Ctl", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstThreeQubitsCA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["(Qubit,Qubit,Qubit) => Unit  is Adj + Ctl", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstTwoQubits": {"callableType": "operation", "argName": ["op", "register"], "argType": ["(Qubit,Qubit) => Unit", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstTwoQubitsA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["(Qubit,Qubit) => Unit  is Adj", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstTwoQubitsC": {"callableType": "operation", "argName": ["op", "register"], "argType": ["(Qubit,Qubit) => Unit  is Ctl", "Qubit[]"], "returnType": "Unit"}, "ApplyToFirstTwoQubitsCA": {"callableType": "operation", "argName": ["op", "register"], "argType": ["(Qubit,Qubit) => Unit  is Adj + Ctl", "Qubit[]"], "returnType": "Unit"}, "ApplyToHead": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T => Unit", "'T[]"], "returnType": "Unit"}, "ApplyToHeadA": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T => Unit  is Adj", "'T[]"], "returnType": "Unit"}, "ApplyToHeadC": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T => Unit  is Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToHeadCA": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T => Unit  is Adj + Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToMost": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T[] => Unit", "'T[]"], "returnType": "Unit"}, "ApplyToMostA": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T[] => Unit  is Adj", "'T[]"], "returnType": "Unit"}, "ApplyToMostC": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T[] => Unit  is Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToMostCA": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T[] => Unit  is Adj + Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToPartition": {"callableType": "operation", "argName": ["op", "numberOfQubitsToFirstArgument", "target"], "argType": ["(Qubit[],Qubit[]) => Unit", "Int", "Qubit[]"], "returnType": "Unit"}, "ApplyToPartitionA": {"callableType": "operation", "argName": ["op", "numberOfQubitsToFirstArgument", "target"], "argType": ["(Qubit[],Qubit[]) => Unit  is Adj", "Int", "Qubit[]"], "returnType": "Unit"}, "ApplyToPartitionC": {"callableType": "operation", "argName": ["op", "numberOfQubitsToFirstArgument", "target"], "argType": ["(Qubit[],Qubit[]) => Unit  is Ctl", "Int", "Qubit[]"], "returnType": "Unit"}, "ApplyToPartitionCA": {"callableType": "operation", "argName": ["op", "numberOfQubitsToFirstArgument", "target"], "argType": ["(Qubit[],Qubit[]) => Unit  is Adj + Ctl", "Int", "Qubit[]"], "returnType": "Unit"}, "ApplyToRest": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T[] => Unit", "'T[]"], "returnType": "Unit"}, "ApplyToRestA": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T[] => Unit  is Adj", "'T[]"], "returnType": "Unit"}, "ApplyToRestC": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T[] => Unit  is Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToRestCA": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T[] => Unit  is Adj + Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToSubregister": {"callableType": "operation", "argName": ["op", "idxs", "target"], "argType": ["Qubit[] => Unit", "Int[]", "Qubit[]"], "returnType": "Unit"}, "ApplyToSubregisterA": {"callableType": "operation", "argName": ["op", "idxs", "target"], "argType": ["Qubit[] => Unit  is Adj", "Int[]", "Qubit[]"], "returnType": "Unit"}, "ApplyToSubregisterC": {"callableType": "operation", "argName": ["op", "idxs", "target"], "argType": ["Qubit[] => Unit  is Ctl", "Int[]", "Qubit[]"], "returnType": "Unit"}, "ApplyToSubregisterCA": {"callableType": "operation", "argName": ["op", "idxs", "target"], "argType": ["Qubit[] => Unit  is Adj + Ctl", "Int[]", "Qubit[]"], "returnType": "Unit"}, "ApplyToTail": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T => Unit", "'T[]"], "returnType": "Unit"}, "ApplyToTailA": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T => Unit  is Adj", "'T[]"], "returnType": "Unit"}, "ApplyToTailC": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T => Unit  is Ctl", "'T[]"], "returnType": "Unit"}, "ApplyToTailCA": {"callableType": "operation", "argName": ["op", "targets"], "argType": ["'T => Unit  is Adj + Ctl", "'T[]"], "returnType": "Unit"}, "ApplyWith": {"callableType": "operation", "argName": ["outerOperation", "innerOperation", "target"], "argType": ["'T => Unit  is Adj", "'T => Unit", "'T"], "returnType": "Unit"}, "ApplyWithA": {"callableType": "operation", "argName": ["outerOperation", "innerOperation", "target"], "argType": ["'T => Unit  is Adj", "'T => Unit  is Adj", "'T"], "returnType": "Unit"}, "ApplyWithC": {"callableType": "operation", "argName": ["outerOperation", "innerOperation", "target"], "argType": ["'T => Unit  is Adj", "'T => Unit  is Ctl", "'T"], "returnType": "Unit"}, "ApplyWithCA": {"callableType": "operation", "argName": ["outerOperation", "innerOperation", "target"], "argType": ["'T => Unit  is Adj", "'T => Unit  is Adj + Ctl", "'T"], "returnType": "Unit"}, "ApplyWithInputTransformation": {"callableType": "operation", "argName": ["fn", "op", "input"], "argType": ["'U -> 'T", "'T => Unit", "'U"], "returnType": "Unit"}, "ApplyWithInputTransformationA": {"callableType": "operation", "argName": ["fn", "op", "input"], "argType": ["'U -> 'T", "'T => Unit  is Adj", "'U"], "returnType": "Unit"}, "ApplyWithInputTransformationC": {"callableType": "operation", "argName": ["fn", "op", "input"], "argType": ["'U -> 'T", "'T => Unit  is Ctl", "'U"], "returnType": "Unit"}, "ApplyWithInputTransformationCA": {"callableType": "operation", "argName": ["fn", "op", "input"], "argType": ["'U -> 'T", "'T => Unit  is Adj + Ctl", "'U"], "returnType": "Unit"}, "ApproximateQFT": {"callableType": "operation", "argName": ["a", "qs"], "argType": ["Int", "BigEndian"], "returnType": "Unit"}, "ApproximatelyApplyDiagonalUnitary": {"callableType": "operation", "argName": ["tolerance", "coefficients", "qubits"], "argType": ["Double", "Double[]", "LittleEndian"], "returnType": "Unit"}, "ApproximatelyMultiplexPauli": {"callableType": "operation", "argName": ["tolerance", "coefficients", "pauli", "control", "target"], "argType": ["Double", "Double[]", "Pauli", "LittleEndian", "Qubit"], "returnType": "Unit"}, "ApproximatelyMultiplexZ": {"callableType": "operation", "argName": ["tolerance", "coefficients", "control", "target"], "argType": ["Double", "Double[]", "LittleEndian", "Qubit"], "returnType": "Unit"}, "CX": {"callableType": "operation", "argName": ["control", "target"], "argType": ["Qubit", "Qubit"], "returnType": "Unit"}, "CY": {"callableType": "operation", "argName": ["control", "target"], "argType": ["Qubit", "Qubit"], "returnType": "Unit"}, "CZ": {"callableType": "operation", "argName": ["control", "target"], "argType": ["Qubit", "Qubit"], "returnType": "Unit"}, "Delay": {"callableType": "operation", "argName": ["op", "arg", "aux"], "argType": ["'T => 'U", "'T", "Unit"], "returnType": "'U"}, "DelayA": {"callableType": "operation", "argName": ["op", "arg", "aux"], "argType": ["'T => Unit  is Adj", "'T", "Unit"], "returnType": "Unit"}, "DelayC": {"callableType": "operation", "argName": ["op", "arg", "aux"], "argType": ["'T => Unit  is Ctl", "'T", "Unit"], "returnType": "Unit"}, "DelayCA": {"callableType": "operation", "argName": ["op", "arg", "aux"], "argType": ["'T => Unit  is Adj + Ctl", "'T", "Unit"], "returnType": "Unit"}, "HY": {"callableType": "operation", "argName": ["target"], "argType": ["Qubit"], "returnType": "Unit"}, "IterateThroughCartesianPower": {"callableType": "operation", "argName": ["power", "bound", "op"], "argType": ["Int", "Int", "Int[] => Unit"], "returnType": "Unit"}, "IterateThroughCartesianProduct": {"callableType": "operation", "argName": ["bounds", "op"], "argType": ["Int[]", "Int[] => Unit"], "returnType": "Unit"}, "MultiplexOperations": {"callableType": "operation", "argName": ["unitaries", "index", "target"], "argType": ["'T => Unit  is Adj + Ctl[]", "LittleEndian", "'T"], "returnType": "Unit"}, "MultiplexOperationsBruteForceFromGenerator": {"callableType": "operation", "argName": ["unitaryGenerator", "index", "target"], "argType": ["(Int,Int -> 'T => Unit  is Adj + Ctl)", "LittleEndian", "'T"], "returnType": "Unit"}, "MultiplexOperationsFromGenerator": {"callableType": "operation", "argName": ["unitaryGenerator", "index", "target"], "argType": ["(Int,Int -> 'T => Unit  is Adj + Ctl)", "LittleEndian", "'T"], "returnType": "Unit"}, "MultiplexPauli": {"callableType": "operation", "argName": ["coefficients", "pauli", "control", "target"], "argType": ["Double[]", "Pauli", "LittleEndian", "Qubit"], "returnType": "Unit"}, "MultiplexZ": {"callableType": "operation", "argName": ["coefficients", "control", "target"], "argType": ["Double[]", "LittleEndian", "Qubit"], "returnType": "Unit"}, "NoOp": {"callableType": "operation", "argName": ["input"], "argType": ["'T"], "returnType": "Unit"}, "PermuteQubits": {"callableType": "operation", "argName": ["ordering", "register"], "argType": ["Int[]", "Qubit[]"], "returnType": "Unit"}, "QFT": {"callableType": "operation", "argName": ["qs"], "argType": ["BigEndian"], "returnType": "Unit"}, "QFTLE": {"callableType": "operation", "argName": ["qs"], "argType": ["LittleEndian"], "returnType": "Unit"}, "RAll0": {"callableType": "operation", "argName": ["phase", "qubits"], "argType": ["Double", "Qubit[]"], "returnType": "Unit"}, "RAll1": {"callableType": "operation", "argName": ["phase", "qubits"], "argType": ["Double", "Qubit[]"], "returnType": "Unit"}, "Repeat": {"callableType": "operation", "argName": ["op", "nTimes", "input"], "argType": ["'TInput => Unit", "Int", "'TInput"], "returnType": "Unit"}, "RepeatA": {"callableType": "operation", "argName": ["op", "nTimes", "input"], "argType": ["'TInput => Unit  is Adj", "Int", "'TInput"], "returnType": "Unit"}, "RepeatC": {"callableType": "operation", "argName": ["op", "nTimes", "input"], "argType": ["'TInput => Unit  is Ctl", "Int", "'TInput"], "returnType": "Unit"}, "RepeatCA": {"callableType": "operation", "argName": ["op", "nTimes", "input"], "argType": ["'TInput => Unit  is Adj + Ctl", "Int", "'TInput"], "returnType": "Unit"}, "SwapReverseRegister": {"callableType": "operation", "argName": ["register"], "argType": ["Qubit[]"], "returnType": "Unit"}}, "Microsoft.Quantum.Characterization": {"ContinuousPhaseEstimationIteration": {"callableType": "operation", "argName": ["oracle", "time", "theta", "targetState", "controlQubit"], "argType": ["ContinuousOracle", "Double", "Double", "Qubit[]", "Qubit"], "returnType": "Unit"}, "DiscretePhaseEstimationIteration": {"callableType": "operation", "argName": ["oracle", "power", "theta", "targetState", "controlQubit"], "argType": ["DiscreteOracle", "Int", "Double", "Qubit[]", "Qubit"], "returnType": "Unit"}, "EstimateFrequency": {"callableType": "operation", "argName": ["preparation", "measurement", "nQubits", "nMeasurements"], "argType": ["Qubit[] => Unit", "Qubit[] => Result", "Int", "Int"], "returnType": "Double"}, "EstimateFrequencyA": {"callableType": "operation", "argName": ["preparation", "measurement", "nQubits", "nMeasurements"], "argType": ["Qubit[] => Unit  is Adj", "Qubit[] => Result", "Int", "Int"], "returnType": "Double"}, "EstimateImagOverlapBetweenStates": {"callableType": "operation", "argName": ["commonPreparation", "preparation1", "preparation2", "nQubits", "nMeasurements"], "argType": ["Qubit[] => Unit  is Adj", "Qubit[] => Unit  is Adj + Ctl", "Qubit[] => Unit  is Adj + Ctl", "Int", "Int"], "returnType": "Double"}, "EstimateOverlapBetweenStates": {"callableType": "operation", "argName": ["preparation1", "preparation2", "nQubits", "nMeasurements"], "argType": ["Qubit[] => Unit  is Adj", "Qubit[] => Unit  is Adj", "Int", "Int"], "returnType": "Double"}, "EstimateRealOverlapBetweenStates": {"callableType": "operation", "argName": ["commonPreparation", "preparation1", "preparation2", "nQubits", "nMeasurements"], "argType": ["Qubit[] => Unit  is Adj", "Qubit[] => Unit  is Adj + Ctl", "Qubit[] => Unit  is Adj + Ctl", "Int", "Int"], "returnType": "Double"}, "MeasureIdentity": {"callableType": "operation", "argName": ["register"], "argType": ["Qubit[]"], "returnType": "Result"}, "QuantumPhaseEstimation": {"callableType": "operation", "argName": ["oracle", "targetState", "controlRegister"], "argType": ["DiscreteOracle", "Qubit[]", "BigEndian"], "returnType": "Unit"}, "RobustPhaseEstimation": {"callableType": "operation", "argName": ["bitsPrecision", "oracle", "targetState"], "argType": ["Int", "DiscreteOracle", "Qubit[]"], "returnType": "Double"}, "SingleQubitProcessTomographyMeasurement": {"callableType": "operation", "argName": ["preparation", "measurement", "channel"], "argType": ["Pauli", "Pauli", "Qubit => Unit"], "returnType": "Result"}}, "Microsoft.Quantum.Chemistry": {}, "Microsoft.Quantum.Chemistry.JordanWigner": {"JordanWignerFermionImpl": {"callableType": "operation", "argName": ["generatorIndex", "stepSize", "qubits"], "argType": ["GeneratorIndex", "Double", "Qubit[]"], "returnType": "Unit"}, "OptimizedBEXY": {"callableType": "operation", "argName": ["pauliBasis", "indexRegister", "targetRegister"], "argType": ["Qubit", "LittleEndian", "Qubit[]"], "returnType": "Unit"}, "PrepareSingleConfigurationalStateSingleSiteOccupation": {"callableType": "operation", "argName": ["qubitIndices", "qubits"], "argType": ["Int[]", "Qubit[]"], "returnType": "Unit"}, "PrepareSparseMultiConfigurationalState": {"callableType": "operation", "argName": ["initialStatePreparation", "excitations", "qubits"], "argType": ["Qubit[] => Unit", "JordanWignerInputState[]", "Qubit[]"], "returnType": "Unit"}, "PrepareTrialState": {"callableType": "operation", "argName": ["stateData", "qubits"], "argType": ["(Int,JordanWignerInputState[])", "Qubit[]"], "returnType": "Unit"}, "PrepareUnitaryCoupledClusterState": {"callableType": "operation", "argName": ["initialStatePreparation", "clusterOperator", "trotterStepSize", "qubits"], "argType": ["Qubit[] => Unit", "JordanWignerInputState[]", "Double", "Qubit[]"], "returnType": "Unit"}, "SelectZ": {"callableType": "operation", "argName": ["indexRegister", "targetRegister"], "argType": ["LittleEndian", "Qubit[]"], "returnType": "Unit"}, "_ApplyJordanWignerPQTerm_": {"callableType": "operation", "argName": ["term", "stepSize", "extraParityQubits", "qubits"], "argType": ["GeneratorIndex", "Double", "Qubit[]", "Qubit[]"], "returnType": "Unit"}, "_ApplyJordanWignerPQandPQQRTerm_": {"callableType": "operation", "argName": ["term", "stepSize", "qubits"], "argType": ["GeneratorIndex", "Double", "Qubit[]"], "returnType": "Unit"}, "_ApplyJordanWignerZTerm_": {"callableType": "operation", "argName": ["term", "stepSize", "qubits"], "argType": ["GeneratorIndex", "Double", "Qubit[]"], "returnType": "Unit"}, "_ApplyJordanWignerZZTerm_": {"callableType": "operation", "argName": ["term", "stepSize", "qubits"], "argType": ["GeneratorIndex", "Double", "Qubit[]"], "returnType": "Unit"}}, "Microsoft.Quantum.Chemistry.JordanWigner.VQE": {"EstimateEnergy": {"callableType": "operation", "argName": ["jwHamiltonian", "nSamples"], "argType": ["JordanWignerEncodingData", "Int"], "returnType": "Double"}, "EstimateTermExpectation": {"callableType": "operation", "argName": ["inputStateUnitary", "ops", "coeffs", "nQubits", "nSamples"], "argType": ["Qubit[] => Unit  is Adj", "Pauli[][]", "Double[]", "Int", "Int"], "returnType": "Double"}}, "Microsoft.Quantum.ClassicalControl": {"ApplyConditionally": {"callableType": "operation", "argName": ["measurementResults", "resultsValues", "onEqualOp", "equalArg", "onNonEqualOp", "nonEqualArg"], "argType": ["Result[]", "Result[]", "'T => Unit", "'T", "'U => Unit", "'U"], "returnType": "Unit"}, "ApplyConditionallyA": {"callableType": "operation", "argName": ["measurementResults", "resultsValues", "onEqualOp", "equalArg", "onNonEqualOp", "nonEqualArg"], "argType": ["Result[]", "Result[]", "'T => Unit  is Adj", "'T", "'U => Unit  is Adj", "'U"], "returnType": "Unit"}, "ApplyConditionallyC": {"callableType": "operation", "argName": ["measurementResults", "resultsValues", "onEqualOp", "equalArg", "onNonEqualOp", "nonEqualArg"], "argType": ["Result[]", "Result[]", "'T => Unit  is Ctl", "'T", "'U => Unit  is Ctl", "'U"], "returnType": "Unit"}, "ApplyConditionallyCA": {"callableType": "operation", "argName": ["measurementResults", "resultsValues", "onEqualOp", "equalArg", "onNonEqualOp", "nonEqualArg"], "argType": ["Result[]", "Result[]", "'T => Unit  is Adj + Ctl", "'T", "'U => Unit  is Adj + Ctl", "'U"], "returnType": "Unit"}, "ApplyConditionallyIntrinsic": {"callableType": "operation", "argName": ["measurementResults", "resultsValues", "onEqualOp", "onNonEqualOp"], "argType": ["Result[]", "Result[]", "Unit => Unit", "Unit => Unit"], "returnType": "Unit"}, "ApplyConditionallyIntrinsicA": {"callableType": "operation", "argName": ["measurementResults", "resultsValues", "onEqualOp", "onNonEqualOp"], "argType": ["Result[]", "Result[]", "Unit => Unit  is Adj", "Unit => Unit  is Adj"], "returnType": "Unit"}, "ApplyConditionallyIntrinsicC": {"callableType": "operation", "argName": ["measurementResults", "resultsValues", "onEqualOp", "onNonEqualOp"], "argType": ["Result[]", "Result[]", "Unit => Unit  is Ctl", "Unit => Unit  is Ctl"], "returnType": "Unit"}, "ApplyConditionallyIntrinsicCA": {"callableType": "operation", "argName": ["measurementResults", "resultsValues", "onEqualOp", "onNonEqualOp"], "argType": ["Result[]", "Result[]", "Unit => Unit  is Adj + Ctl", "Unit => Unit  is Adj + Ctl"], "returnType": "Unit"}, "ApplyIfElseIntrinsic": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "onResultOneOp"], "argType": ["Result", "Unit => Unit", "Unit => Unit"], "returnType": "Unit"}, "ApplyIfElseIntrinsicA": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "onResultOneOp"], "argType": ["Result", "Unit => Unit  is Adj", "Unit => Unit  is Adj"], "returnType": "Unit"}, "ApplyIfElseIntrinsicC": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "onResultOneOp"], "argType": ["Result", "Unit => Unit  is Ctl", "Unit => Unit  is Ctl"], "returnType": "Unit"}, "ApplyIfElseIntrinsicCA": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "onResultOneOp"], "argType": ["Result", "Unit => Unit  is Adj + Ctl", "Unit => Unit  is Adj + Ctl"], "returnType": "Unit"}, "ApplyIfElseR": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "zeroArg", "onResultOneOp", "oneArg"], "argType": ["Result", "'T => Unit", "'T", "'U => Unit", "'U"], "returnType": "Unit"}, "ApplyIfElseRA": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "zeroArg", "onResultOneOp", "oneArg"], "argType": ["Result", "'T => Unit  is Adj", "'T", "'U => Unit  is Adj", "'U"], "returnType": "Unit"}, "ApplyIfElseRC": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "zeroArg", "onResultOneOp", "oneArg"], "argType": ["Result", "'T => Unit  is Ctl", "'T", "'U => Unit  is Ctl", "'U"], "returnType": "Unit"}, "ApplyIfElseRCA": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "zeroArg", "onResultOneOp", "oneArg"], "argType": ["Result", "'T => Unit  is Adj + Ctl", "'T", "'U => Unit  is Adj + Ctl", "'U"], "returnType": "Unit"}, "ApplyIfOne": {"callableType": "operation", "argName": ["measurementResult", "onResultOneOp", "oneArg"], "argType": ["Result", "'T => Unit", "'T"], "returnType": "Unit"}, "ApplyIfOneA": {"callableType": "operation", "argName": ["measurementResult", "onResultOneOp", "oneArg"], "argType": ["Result", "'T => Unit  is Adj", "'T"], "returnType": "Unit"}, "ApplyIfOneC": {"callableType": "operation", "argName": ["measurementResult", "onResultOneOp", "oneArg"], "argType": ["Result", "'T => Unit  is Ctl", "'T"], "returnType": "Unit"}, "ApplyIfOneCA": {"callableType": "operation", "argName": ["measurementResult", "onResultOneOp", "oneArg"], "argType": ["Result", "'T => Unit  is Adj + Ctl", "'T"], "returnType": "Unit"}, "ApplyIfZero": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "zeroArg"], "argType": ["Result", "'T => Unit", "'T"], "returnType": "Unit"}, "ApplyIfZeroA": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "zeroArg"], "argType": ["Result", "'T => Unit  is Adj", "'T"], "returnType": "Unit"}, "ApplyIfZeroC": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "zeroArg"], "argType": ["Result", "'T => Unit  is Ctl", "'T"], "returnType": "Unit"}, "ApplyIfZeroCA": {"callableType": "operation", "argName": ["measurementResult", "onResultZeroOp", "zeroArg"], "argType": ["Result", "'T => Unit  is Adj + Ctl", "'T"], "returnType": "Unit"}}, "Microsoft.Quantum.Convert": {"Call": {"callableType": "operation", "argName": ["fn", "input"], "argType": ["'Input -> 'Output", "'Input"], "returnType": "'Output"}}, "Microsoft.Quantum.Core": {}, "Microsoft.Quantum.Diagnostics": {"AllowAtMostNCallsCA": {"callableType": "operation", "argName": ["nTimes", "op", "message"], "argType": ["Int", "'TInput => 'TOutput", "String"], "returnType": "Unit"}, "AllowAtMostNQubits": {"callableType": "operation", "argName": ["nQubits", "message"], "argType": ["Int", "String"], "returnType": "Unit"}, "AssertAllZero": {"callableType": "operation", "argName": ["qubits"], "argType": ["Qubit[]"], "returnType": "Unit"}, "AssertAllZeroWithinTolerance": {"callableType": "operation", "argName": ["qubits", "tolerance"], "argType": ["Qubit[]", "Double"], "returnType": "Unit"}, "AssertMeasurement": {"callableType": "operation", "argName": ["bases", "qubits", "result", "msg"], "argType": ["Pauli[]", "Qubit[]", "Result", "String"], "returnType": "Unit"}, "AssertMeasurementProbability": {"callableType": "operation", "argName": ["bases", "qubits", "result", "prob", "msg", "tolerance"], "argType": ["Pauli[]", "Qubit[]", "Result", "Double", "String", "Double"], "returnType": "Unit"}, "AssertOperationsEqualInPlace": {"callableType": "operation", "argName": ["nQubits", "givenU", "expectedU"], "argType": ["Int", "Qubit[] => Unit", "Qubit[] => Unit  is Adj"], "returnType": "Unit"}, "AssertOperationsEqualInPlaceCompBasis": {"callableType": "operation", "argName": ["nQubits", "givenU", "expectedU"], "argType": ["Int", "Qubit[] => Unit", "Qubit[] => Unit  is Adj"], "returnType": "Unit"}, "AssertOperationsEqualReferenced": {"callableType": "operation", "argName": ["nQubits", "actual", "expected"], "argType": ["Int", "Qubit[] => Unit", "Qubit[] => Unit  is Adj"], "returnType": "Unit"}, "AssertPhase": {"callableType": "operation", "argName": ["expected", "qubit", "tolerance"], "argType": ["Double", "Qubit", "Double"], "returnType": "Unit"}, "AssertQubit": {"callableType": "operation", "argName": ["expected", "q"], "argType": ["Result", "Qubit"], "returnType": "Unit"}, "AssertQubitIsInStateWithinTolerance": {"callableType": "operation", "argName": ["expected", "register", "tolerance"], "argType": ["(Complex,Complex)", "Qubit", "Double"], "returnType": "Unit"}, "AssertQubitWithinTolerance": {"callableType": "operation", "argName": ["expected", "q", "tolerance"], "argType": ["Result", "Qubit", "Double"], "returnType": "Unit"}, "DumpOperation": {"callableType": "operation", "argName": ["nQubits", "op"], "argType": ["Int", "Qubit[] => Unit  is Adj"], "returnType": "Unit"}}, "Microsoft.Quantum.Environment": {}, "Microsoft.Quantum.ErrorCorrection": {"DecodeFromBitFlipCode": {"callableType": "operation", "argName": ["logicalRegister"], "argType": ["LogicalRegister"], "returnType": "(Qubit[],Qubit[])"}, "DecodeFromFiveQubitCode": {"callableType": "operation", "argName": ["logicalRegister"], "argType": ["LogicalRegister"], "returnType": "(Qubit[],Qubit[])"}, "DecodeFromSteaneCode": {"callableType": "operation", "argName": ["logicalRegister"], "argType": ["LogicalRegister"], "returnType": "(Qubit[],Qubit[])"}, "EncodeIntoBitFlipCode": {"callableType": "operation", "argName": ["physRegister", "auxQubits"], "argType": ["Qubit[]", "Qubit[]"], "returnType": "LogicalRegister"}, "EncodeIntoFiveQubitCode": {"callableType": "operation", "argName": ["physRegister", "auxQubits"], "argType": ["Qubit[]", "Qubit[]"], "returnType": "LogicalRegister"}, "EncodeIntoSteaneCode": {"callableType": "operation", "argName": ["physRegister", "auxQubits"], "argType": ["Qubit[]", "Qubit[]"], "returnType": "LogicalRegister"}, "FiveQubitCodeEncoderImpl": {"callableType": "operation", "argName": ["data", "scratch"], "argType": ["Qubit[]", "Qubit[]"], "returnType": "Unit"}, "InjectPi4YRotation": {"callableType": "operation", "argName": ["data", "magic"], "argType": ["Qubit", "Qubit"], "returnType": "Unit"}, "KnillDistill": {"callableType": "operation", "argName": ["roughMagic"], "argType": ["Qubit[]"], "returnType": "Bool"}, "MeasureStabilizerGenerators": {"callableType": "operation", "argName": ["stabilizerGroup", "logicalRegister", "gadget"], "argType": ["Pauli[][]", "LogicalRegister", "(Pauli[],Qubit[]) => Result"], "returnType": "Syndrome"}, "Recover": {"callableType": "operation", "argName": ["code", "fn", "logicalRegister"], "argType": ["QECC", "RecoveryFn", "LogicalRegister"], "returnType": "Unit"}, "RecoverCSS": {"callableType": "operation", "argName": ["code", "fnX", "fnZ", "logicalRegister"], "argType": ["CSS", "RecoveryFn", "RecoveryFn", "LogicalRegister"], "returnType": "Unit"}, "SteaneCodeEncoderImpl": {"callableType": "operation", "argName": ["data", "scratch"], "argType": ["Qubit[]", "Qubit[]"], "returnType": "Unit"}, "_ExtractLogicalQubitFromSteaneCode": {"callableType": "operation", "argName": ["code"], "argType": ["LogicalRegister"], "returnType": "(Qubit,Int,Int)"}}, "Microsoft.Quantum.Extensions.Bitwise": {}, "Microsoft.Quantum.Extensions.Convert": {}, "Microsoft.Quantum.Extensions.Math": {}, "Microsoft.Quantum.Intrinsic": {"CCNOT": {"callableType": "operation", "argName": ["control1", "control2", "target"], "argType": ["Qubit", "Qubit", "Qubit"], "returnType": "Unit"}, "CNOT": {"callableType": "operation", "argName": ["control", "target"], "argType": ["Qubit", "Qubit"], "returnType": "Unit"}, "Exp": {"callableType": "operation", "argName": ["paulis", "theta", "qubits"], "argType": ["Pauli[]", "Double", "Qubit[]"], "returnType": "Unit"}, "ExpFrac": {"callableType": "operation", "argName": ["paulis", "numerator", "power", "qubits"], "argType": ["Pauli[]", "Int", "Int", "Qubit[]"], "returnType": "Unit"}, "H": {"callableType": "operation", "argName": ["qubit"], "argType": ["Qubit"], "returnType": "Unit"}, "I": {"callableType": "operation", "argName": ["target"], "argType": ["Qubit"], "returnType": "Unit"}, "M": {"callableType": "operation", "argName": ["qubit"], "argType": ["Qubit"], "returnType": "Result"}, "Measure": {"callableType": "operation", "argName": ["bases", "qubits"], "argType": ["Pauli[]", "Qubit[]"], "returnType": "Result"}, "R": {"callableType": "operation", "argName": ["pauli", "theta", "qubit"], "argType": ["Pauli", "Double", "Qubit"], "returnType": "Unit"}, "R1": {"callableType": "operation", "argName": ["theta", "qubit"], "argType": ["Double", "Qubit"], "returnType": "Unit"}, "R1Frac": {"callableType": "operation", "argName": ["numerator", "power", "qubit"], "argType": ["Int", "Int", "Qubit"], "returnType": "Unit"}, "RFrac": {"callableType": "operation", "argName": ["pauli", "numerator", "power", "qubit"], "argType": ["Pauli", "Int", "Int", "Qubit"], "returnType": "Unit"}, "Reset": {"callableType": "operation", "argName": ["qubit"], "argType": ["Qubit"], "returnType": "Unit"}, "ResetAll": {"callableType": "operation", "argName": ["qubits"], "argType": ["Qubit[]"], "returnType": "Unit"}, "Rx": {"callableType": "operation", "argName": ["theta", "qubit"], "argType": ["Double", "Qubit"], "returnType": "Unit"}, "Ry": {"callableType": "operation", "argName": ["theta", "qubit"], "argType": ["Double", "Qubit"], "returnType": "Unit"}, "Rz": {"callableType": "operation", "argName": ["theta", "qubit"], "argType": ["Double", "Qubit"], "returnType": "Unit"}, "S": {"callableType": "operation", "argName": ["qubit"], "argType": ["Qubit"], "returnType": "Unit"}, "SWAP": {"callableType": "operation", "argName": ["qubit1", "qubit2"], "argType": ["Qubit", "Qubit"], "returnType": "Unit"}, "T": {"callableType": "operation", "argName": ["qubit"], "argType": ["Qubit"], "returnType": "Unit"}, "X": {"callableType": "operation", "argName": ["qubit"], "argType": ["Qubit"], "returnType": "Unit"}, "Y": {"callableType": "operation", "argName": ["qubit"], "argType": ["Qubit"], "returnType": "Unit"}, "Z": {"callableType": "operation", "argName": ["qubit"], "argType": ["Qubit"], "returnType": "Unit"}}, "Microsoft.Quantum.Logical": {}, "Microsoft.Quantum.MachineLearning": {"ApplySequentialClassifier": {"callableType": "operation", "argName": ["model", "qubits"], "argType": ["SequentialModel", "Qubit[]"], "returnType": "Unit"}, "EstimateClassificationProbabilities": {"callableType": "operation", "argName": ["tolerance", "model", "samples", "nMeasurements"], "argType": ["Double", "SequentialModel", "Double[][]", "Int"], "returnType": "Double[]"}, "EstimateClassificationProbability": {"callableType": "operation", "argName": ["tolerance", "model", "sample", "nMeasurements"], "argType": ["Double", "SequentialModel", "Double[]", "Int"], "returnType": "Double"}, "EstimateGradient": {"callableType": "operation", "argName": ["model", "encodedInput", "nMeasurements"], "argType": ["SequentialModel", "StateGenerator", "Int"], "returnType": "Double[]"}, "TrainSequentialClassifier": {"callableType": "operation", "argName": ["models", "samples", "options", "trainingSchedule", "validationSchedule"], "argType": ["SequentialModel[]", "LabeledSample[]", "TrainingOptions", "SamplingSchedule", "SamplingSchedule"], "returnType": "(SequentialModel,Int)"}, "TrainSequentialClassifierAtModel": {"callableType": "operation", "argName": ["model", "samples", "options", "trainingSchedule", "validationSchedule"], "argType": ["SequentialModel", "LabeledSample[]", "TrainingOptions", "SamplingSchedule", "SamplingSchedule"], "returnType": "(SequentialModel,Int)"}, "ValidateSequentialClassifier": {"callableType": "operation", "argName": ["model", "samples", "tolerance", "nMeasurements", "validationSchedule"], "argType": ["SequentialModel", "LabeledSample[]", "Double", "Int", "SamplingSchedule"], "returnType": "ValidationResults"}}, "Microsoft.Quantum.MachineLearning.Datasets": {"IrisTrainingData": {"callableType": "operation", "argName": [], "argType": [], "returnType": "LabeledSample[]"}, "WineData": {"callableType": "operation", "argName": [], "argType": [], "returnType": "LabeledSample[]"}}, "Microsoft.Quantum.Math": {}, "Microsoft.Quantum.Measurement": {"MResetX": {"callableType": "operation", "argName": ["target"], "argType": ["Qubit"], "returnType": "Result"}, "MResetY": {"callableType": "operation", "argName": ["target"], "argType": ["Qubit"], "returnType": "Result"}, "MResetZ": {"callableType": "operation", "argName": ["target"], "argType": ["Qubit"], "returnType": "Result"}, "MeasureAllZ": {"callableType": "operation", "argName": ["register"], "argType": ["Qubit[]"], "returnType": "Result"}, "MeasureEachZ": {"callableType": "operation", "argName": ["targets"], "argType": ["Qubit[]"], "returnType": "Result[]"}, "MeasurePaulis": {"callableType": "operation", "argName": ["paulis", "target", "gadget"], "argType": ["Pauli[][]", "Qubit[]", "(Pauli[],Qubit[]) => Result"], "returnType": "Result[]"}, "MeasureWithScratch": {"callableType": "operation", "argName": ["pauli", "target"], "argType": ["Pauli[]", "Qubit[]"], "returnType": "Result"}, "MultiM": {"callableType": "operation", "argName": ["targets"], "argType": ["Qubit[]"], "returnType": "Result[]"}, "SetToBasisState": {"callableType": "operation", "argName": ["desired", "target"], "argType": ["Result", "Qubit"], "returnType": "Unit"}}, "Microsoft.Quantum.Optimization": {}, "Microsoft.Quantum.Oracles": {}, "Microsoft.Quantum.Preparation": {"ApproximatelyPrepareArbitraryStateCP": {"callableType": "operation", "argName": ["tolerance", "coefficients", "qubits"], "argType": ["Double", "ComplexPolar[]", "LittleEndian"], "returnType": "Unit"}, "ApproximatelyPrepareArbitraryStateD": {"callableType": "operation", "argName": ["tolerance", "coefficients", "qubits"], "argType": ["Double", "Double[]", "LittleEndian"], "returnType": "Unit"}, "PrepareArbitraryStateCP": {"callableType": "operation", "argName": ["coefficients", "qubits"], "argType": ["ComplexPolar[]", "LittleEndian"], "returnType": "Unit"}, "PrepareArbitraryStateD": {"callableType": "operation", "argName": ["coefficients", "qubits"], "argType": ["Double[]", "LittleEndian"], "returnType": "Unit"}, "PrepareChoiState": {"callableType": "operation", "argName": ["op", "reference", "target"], "argType": ["Qubit[] => Unit", "Qubit[]", "Qubit[]"], "returnType": "Unit"}, "PrepareChoiStateA": {"callableType": "operation", "argName": ["op", "reference", "target"], "argType": ["Qubit[] => Unit  is Adj", "Qubit[]", "Qubit[]"], "returnType": "Unit"}, "PrepareChoiStateC": {"callableType": "operation", "argName": ["op", "reference", "target"], "argType": ["Qubit[] => Unit  is Ctl", "Qubit[]", "Qubit[]"], "returnType": "Unit"}, "PrepareChoiStateCA": {"callableType": "operation", "argName": ["op", "reference", "target"], "argType": ["Qubit[] => Unit  is Adj + Ctl", "Qubit[]", "Qubit[]"], "returnType": "Unit"}, "PrepareEntangledState": {"callableType": "operation", "argName": ["left", "right"], "argType": ["Qubit[]", "Qubit[]"], "returnType": "Unit"}, "PrepareIdentity": {"callableType": "operation", "argName": ["register"], "argType": ["Qubit[]"], "returnType": "Unit"}, "PreparePauliEigenstate": {"callableType": "operation", "argName": ["basis", "qubit"], "argType": ["Pauli", "Qubit"], "returnType": "Unit"}, "PrepareSingleQubitIdentity": {"callableType": "operation", "argName": ["qubit"], "argType": ["Qubit"], "returnType": "Unit"}, "PrepareUniformSuperposition": {"callableType": "operation", "argName": ["nIndices", "indexRegister"], "argType": ["Int", "LittleEndian"], "returnType": "Unit"}, "_PrepareAmplitudesFromZeroState": {"callableType": "operation", "argName": ["coefficients", "qubits"], "argType": ["ComplexPolar[]", "LittleEndian"], "returnType": "Unit"}}, "Microsoft.Quantum.Random": {"DrawCategorical": {"callableType": "operation", "argName": ["probs"], "argType": ["Double[]"], "returnType": "Int"}, "DrawRandomBool": {"callableType": "operation", "argName": ["successProbability"], "argType": ["Double"], "returnType": "Bool"}, "DrawRandomDouble": {"callableType": "operation", "argName": ["min", "max"], "argType": ["Double", "Double"], "returnType": "Double"}, "DrawRandomInt": {"callableType": "operation", "argName": ["min", "max"], "argType": ["Int", "Int"], "returnType": "Int"}, "DrawRandomPauli": {"callableType": "operation", "argName": [], "argType": [], "returnType": "Pauli"}, "DrawRandomSingleQubitClifford": {"callableType": "operation", "argName": [], "argType": [], "returnType": "SingleQubitClifford"}, "MaybeChooseElement": {"callableType": "operation", "argName": ["data", "indexDistribution"], "argType": ["'T[]", "DiscreteDistribution"], "returnType": "(Bool,'T)"}}, "Microsoft.Quantum.Research.Characterization": {"RandomWalkPhaseEstimation": {"callableType": "operation", "argName": ["initialMean", "initialStdDev", "nMeasurements", "maxMeasurements", "unwind", "oracle", "targetState"], "argType": ["Double", "Double", "Int", "Int", "Int", "ContinuousOracle", "Qubit[]"], "returnType": "Double"}}, "Microsoft.Quantum.Research.Chemistry": {"ApplyDeltaParity": {"callableType": "operation", "argName": ["prevFermionicTerm", "nextFermionicTerm", "aux", "qubits"], "argType": ["Int[]", "Int[]", "Qubit", "Qubit[]"], "returnType": "Unit"}, "JWOptimizedStatePreparation": {"callableType": "operation", "argName": ["qubitIndices", "qubits"], "argType": ["Int[]", "Qubit[]"], "returnType": "Unit"}, "_ApplyOptimizedTrotterStep": {"callableType": "operation", "argName": ["qSharpData", "trotterStepSize", "allQubits"], "argType": ["JordanWignerEncodingData", "Double", "Qubit[]"], "returnType": "Unit"}, "_JWOptimizedFermionEvolution": {"callableType": "operation", "argName": ["generatorIndex", "stepSize", "parityQubit", "qubits"], "argType": ["GeneratorIndex", "Double", "Qubit", "Qubit[]"], "returnType": "Unit"}}, "Microsoft.Quantum.Simulation": {"AdiabaticStateEnergyUnitary": {"callableType": "operation", "argName": ["statePrepUnitary", "adiabaticUnitary", "qpeUnitary", "phaseEstAlgorithm", "qubits"], "argType": ["Qubit[] => Unit", "Qubit[] => Unit", "Qubit[] => Unit  is Adj + Ctl", "(DiscreteOracle,Qubit[]) => Double", "Qubit[]"], "returnType": "Double"}, "EstimateEnergy": {"callableType": "operation", "argName": ["nQubits", "statePrepUnitary", "qpeUnitary", "phaseEstAlgorithm"], "argType": ["Int", "Qubit[] => Unit", "Qubit[] => Unit  is Adj + Ctl", "(DiscreteOracle,Qubit[]) => Double"], "returnType": "Double"}, "EstimateEnergyWithAdiabaticEvolution": {"callableType": "operation", "argName": ["nQubits", "statePrepUnitary", "adiabaticUnitary", "qpeUnitary", "phaseEstAlgorithm"], "argType": ["Int", "Qubit[] => Unit", "Qubit[] => Unit", "Qubit[] => Unit  is Adj + Ctl", "(DiscreteOracle,Qubit[]) => Double"], "returnType": "Double"}}, "Microsoft.Quantum.Simulation.QuantumProcessor.Extensions": {}, "Microsoft.Quantum.Synthesis": {"Apply1C": {"callableType": "operation", "argName": ["op", "target"], "argType": ["SingleQubitClifford", "Qubit"], "returnType": "Unit"}, "ApplyPermutationUsingDecomposition": {"callableType": "operation", "argName": ["perm", "qubits"], "argType": ["Int[]", "LittleEndian"], "returnType": "Unit"}, "ApplyPermutationUsingDecompositionWithVariableOrder": {"callableType": "operation", "argName": ["perm", "variableOrder", "qubits"], "argType": ["Int[]", "Int[]", "LittleEndian"], "returnType": "Unit"}, "ApplyPermutationUsingTransformation": {"callableType": "operation", "argName": ["perm", "qubits"], "argType": ["Int[]", "LittleEndian"], "returnType": "Unit"}, "ApplyTransposition": {"callableType": "operation", "argName": ["a", "b", "qubits"], "argType": ["Int", "Int", "LittleEndian"], "returnType": "Unit"}, "ApplyUnitary": {"callableType": "operation", "argName": ["unitary", "qubits"], "argType": ["Complex[][]", "LittleEndian"], "returnType": "Unit"}, "ApplyXControlledOnTruthTable": {"callableType": "operation", "argName": ["func", "controlRegister", "target"], "argType": ["BigInt", "Qubit[]", "Qubit"], "returnType": "Unit"}, "ApplyXControlledOnTruthTableWithCleanTarget": {"callableType": "operation", "argName": ["func", "controlRegister", "target"], "argType": ["BigInt", "Qubit[]", "Qubit"], "returnType": "Unit"}}, "Microsoft.Quantum.Targeting": {}}